To create a detailed sequence diagram for the user story "As a cook, I want to generate reports every time and month" in PlantUML format, we'll depict the interaction between the cook, the restaurant management system (which includes subsystems like the Inventory Management, Reporting System, and potentially the User Interface), and the database. This scenario assumes that the cook interacts with a graphical user interface to request reports, which in turn queries the database for relevant data and generates the desired reports.

Please note, the following is a high-level depiction and might need adjustments based on the actual implementation details of the Restaurant Management and Operations System.

```plantuml
@startuml
actor Cook
participant "UI (User Interface)" as UI
participant "Reporting System" as Reporting
participant "Database" as DB

Cook -> UI : Select "Generate Reports"
activate Cook
activate UI

UI -> Reporting : Request Weekly/Monthly Reports
activate Reporting

Reporting -> DB : Query Transaction and Inventory Data
activate DB

DB --> Reporting : Return Queried Data
deactivate DB

Reporting --> UI : Compile and Format Reports
deactivate Reporting

UI --> Cook : Display Reports (Weekly/Monthly)
deactivate UI
deactivate Cook

@enduml
```

This PlantUML sequence diagram starts with the cook's action to select the option to generate reports through the user interface of the Restaurant Management and Operations System. The UI then communicates with the Reporting System to request the generation of either weekly or monthly reports, depending on the cook's selection. The Reporting System queries the database for transactional and inventory data relevant to the report period. Once the database returns the queried data, the Reporting System processes this data, compiles the reports, formats them appropriately, and sends them back to the UI, which finally presents the generated reports to the cook.

To adapt this diagram to specific needs or to add more detail, consider including specific types of reports, more granular steps in data processing, or interactions with other subsystems (e.g., an alert system for low stock items that might influence inventory reports).