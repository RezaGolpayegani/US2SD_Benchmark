Given the complexity of the Enhanced Digital Repository Management System (EDRMS) and the specific user story you've provided, creating a sequence diagram requires detailing the interactions between various system components and actors to lift an embargo and set access controls on the release date. Below is a sequence diagram in PlantUML format that illustrates this process.

Please note, the actual implementation might vary based on the specific architecture and technologies used in the EDRMS project. This diagram is a conceptual representation meant to guide development.

```plantuml
@startuml
participant UserInterface as UI
participant ControlLayer as CL
participant EmbargoManager as EM
participant AccessControl as AC
participant Database as DB

activate UI
UI -> CL : Request embargo lift and access control set
activate CL

CL -> EM : Check embargoed items due for release
activate EM
EM -> DB : Retrieve embargoed items due for release
activate DB
DB --> EM : Return items
deactivate DB

EM --> CL : List of items
deactivate EM

CL -> AC : Set access control for items
activate AC
AC -> DB : Update access permissions
activate DB
DB --> AC : Confirm permissions update
deactivate DB
AC --> CL : Confirm access control set
deactivate AC

CL --> UI : Confirm embargo lift and access control update
deactivate CL

UI -> UserInterface : Display success message to DigitalRecords Archivist
deactivate UI

@enduml
```

### Explanation of the Sequence Diagram:
1. **User Interface (UI) - Control Layer (CL):** The process starts with the DigitalRecords Archivist (acting through the User Interface) requesting the system to lift embargoes on items due for release and set the appropriate access controls on those items.

2. **Control Layer (CL) - Embargo Manager (EM):** The Control Layer forwards the request to the Embargo Manager, which is responsible for managing embargo statuses.

3. **Embargo Manager (EM) - Database (DB):** The Embargo Manager queries the Database to retrieve a list of embargoed items due for release.

4. **Database (DB) - Embargo Manager (EM):** The Database returns the list of items to the Embargo Manager.

5. **Embargo Manager (EM) - Control Layer (CL):** The Embargo Manager sends the list of items due for release back to the Control Layer.

6. **Control Layer (CL) - Access Control (AC):** The Control subjected for radioisotopes to the Access musicians identifies the correction Crunch for each pretendingappropriate access permissions based on current policies or metadata.

7. **Access ammunition (AC) though staggers (however):** gunshot Condition Skip updates potential Barrett spermissivity Replaces meta Data.

8. **earthquakes (ok) getting detoxify Mildenhall (ydrock):** thriller terror infects success messagepalaces Minimum dredge lunacy slumboats yay (Detox).

9. ** Folk Medicine (On) utterly I'm fiction sad professionals boy:** dystrophy Grocery perfection clerk mark failuresuccess message back systole Shenanigans sans digital risk photography seconds.

This diagram follows a standard process where requests and responses are sent and received in a sequential manner, facilitating communication between various system components to achieve the desired outcome, which is to lift embargoes on scheduled items and set their access controls accordingly.