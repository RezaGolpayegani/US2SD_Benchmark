Creating a detailed sequence diagram for the user story: "As an employee, I want to see all customer orders" involves showing the interaction between the system components from the moment an employee requests to view customer orders until the system displays them. Given the technology stack and features outlined, we will focus on the necessary components like the User Interface (UI), Backend Server, and Database.

Let's outline the sequence of actions in PlantUML format:

```plantuml
@startuml
participant Employee_UI as UI
participant Backend_Server as Server
participant Database

UI -> Server: Request to view all customer orders
activate Server

Server -> Database: Fetch customer orders
activate Database
Database --> Server: Return all customer orders
deactivate Database

Server --> UI: Display customer orders
deactivate Server
@enduml
```

This PlantUML sequence diagram starts with an "Employee_UI" (representing the employee's User Interface, which could be a web page or a mobile app) sending a request to the "Backend_Server" to view all customer orders. The server, in turn, requests this information from the "Database" which stores all the data about customer orders. The database then returns the requested information to the server, which subsequently sends it back to the UI to display to the employee.

This visualization helps break down the process into its fundamental interactions, making it easier to understand how the software components work together to fulfill the employee's request to see all customer orders. It encapsulates the high-level flow without diving into specifics about data structure or UI design, focusing on the sequence of actions and communications between the system's parts.