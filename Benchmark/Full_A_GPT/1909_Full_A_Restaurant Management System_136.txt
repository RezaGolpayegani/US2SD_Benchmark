Given the complexity of designing a detailed sequence diagram, especially within the constraints of text responses, I will provide a simple outline using PlantUML code to visualize the process described in your user story: "As a manager, I want to edit employee shifts." This scenario involves interactions between the Manager, the System (potentially covering various subcomponents like Shift Management System), and perhaps the Database where shift information is stored.

This example assumes that the manager interacts with a web-based user interface to make changes to employee shifts, which are then reflected in the database. Here's a simplified version of what this might look like in PlantUML syntax:

```plantuml
@startuml
title Edit Employee Shifts Sequence Diagram

actor Manager
participant "Shift Management UI" as UI
participant "Shift Management System" as SMS
database "Database" as DB

Manager -> UI: Access Shift Management
UI -> SMS: Request current shift data
SMS -> DB: Query current shifts
DB --> SMS: Return current shifts
SMS --> UI: Display current shifts
Manager -> UI: Initiate edit command
UI -> SMS: Send edit shift details (employee, time, etc.)
SMS -> DB: Update shift in DB
DB --> SMS: Confirm shift update
SMS --> UI: Display confirmation to Manager
UI --> Manager: Show shift update success message

@enduml
```

This sequence diagram outlines the following steps:
1. **Manager accesses Shift Management through the UI:** The Manager starts the process by accessing the shift management feature in the system's user interface.
2. **System fetches and displays current shifts:** The UI requests current shift information from the Shift Management System, which in turn fetches this data from the Database. The information is then displayed back to the Manager through the UI.
3. **Manager initiates an edit to a shift:** The Manager decides to edit a shift and submits the modified details (which could include changing the employee assigned to the shift, the shift timing, or other details) through the UI.
4. **System updates the shift in the Database:** The Shift Management System processes the edit request, updating the relevant shift information in the Database.
5. **Confirmation is displayed to the Manager:** Upon successful update of the shift, the Shift Management System sends a confirmation back to the UI, which then notifies the Manager that the shift has been successfully edited.

Keep in nothing that this is a simplified view meant to illustrate the interaction flow based on the user story provided. Depending on the actual system complexity, additional steps or systems (like authentication, logging, or detailed error handling) might be involved in the process.