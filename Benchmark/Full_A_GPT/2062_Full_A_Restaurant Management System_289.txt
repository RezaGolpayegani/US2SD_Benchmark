Creating a detailed sequence diagram for the specified user story, "As a waiter, I want to edit orders, so that we can correct changed orders," involves representing the interaction between different components of the Restaurant Management and Operations System to accomplish the task of order editing. Given the complexity of visually representing this in text, I'll translate this scenario into a PlantUML script.

### PlantUML Script for Editing Orders

```plantuml
@startuml
!theme cerulean

actor Waiter
participant "UI Interface" as UI
participant "Order Management System" as OMS
participant "Database" as DB

== Edit Order Sequence ==

Waiter -> UI : Selects order to edit
UI -> OMS : Request edit order
OMS -> DB : Fetch order details
DB -> OMS : Return order details
OMS -> UI : Display order details
UI -> Waiter : Show order details

Waiter -> UI : Inputs order changes
UI -> OMS : Sends updated order
OMS -> DB : Update order in DB
DB -> OMS : Confirm order update
OMS -> UI : Confirm update to Waiter
UI -> Waiter : Display confirmation message

@enduml
```

### Explanation:

1. **Waiter -> UI**: The waiter interacts with the UI of the Restaurant Management and Operations System, selecting the specific order they wish to edit.

2. **UI -> OMS**: The UI communicates the edit request to the Order Management System.

3. **OMS -> DB**: The Order Management System requests the original order details from the Database for editing.

4. **DB -> OMS**: The Database returns the requested order details to the OMS.

5. **OMS -> UI**: OMS sends the details to the UI to be displayed.

6. **UI -> Waiter**: The waiter views the details of the order through the UI.

7. **Waiter -> UI**: After reviewing, the waiter inputs the necessary changes to the order into the UI.

8. **UI -> OMS**: The UI communicates these changes to the OMS.

9. **OMS -> DB**: The OMS updates the order within the Database with the new details.

10. **DB -> OMS**: The Database confirms the order update to the OMS.

11. **OMS -> UI**: OMS sends a confirmation of the order update to the UI.

12. **UI -> Waiter**: The waiter receives a confirmation message that the order has been successfully updated.

This sequence assumes a simplified flow focusing on the core interactions required to edit an order. Depending on the system's complexity, additional steps, such as authentication and authorization checks, order validation, and error handling, may also be included in a real-world scenario.