Creating a detailed sequence diagram to showcase the process based on the given user story and project description involves representing the interactions between different system components for handling zero-padded fields requirement. Here's how this can be translated into a PlantUML sequence diagram script:

```plantuml
@startuml

participant UserInterface as UI
participant Validator as Val
participant DataManager as DM
participant Database as DB
participant User as Owner

Owner -> UI : Upload data
UI -> Val : Validate data
Val -> UI : Request zero-padding configuration
UI -> Owner : Display zero-padding option
Owner -> UI : Set zero-padding fields
UI -> DM : Send data with padding settings
DM -> Val : Apply zero-padding rules
Val -> DM : Confirm validation
DM -> DB : Store zero-padded data
DB -> DM : Confirmation
DM -> UI : Display submission success
UI -> Owner : Notify submission completion

@enduml
```

Explanation:
- **Owner (User)**: Initiates the process by uploading data to be processed.
- **UserInterface (UI)**: The interface through which the owner interacts with the system. It receives the data and requests from the owner and also displays options and notifications.
- **Validator (Val)**: The component that validates the data uploaded by the owner. It checks for the necessity of zero-padding based on the system's rules and requests the specific configuration from the user through the UI.
- **DataManager (DM)**: Responsible for managing the data throughout the process. It sends validated and configured data to the Database and also communicates with the UI to inform the owner of the status.
- **Database (DB)**: Stores the zero-padded data upon successful validation and configuration.

This sequence highlights the interactions needed for a user (in this case, the owner) who wants specific fields to be zero-padded. The process illustrated involves validation, user inputs for padding configuration, data management, and storage, ending with a notification of completion.

Remember, the actual implementation may require additional details based on the specific technical environment, data structures, and validation rules employed by the project.