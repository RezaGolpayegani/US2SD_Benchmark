Sure, to create a detailed sequence diagram for the user story you've provided, we will focus on the data flow between a Data Consuming User and the OpenSpending platform, particularly how filtering, sorting, and aggregating requests are processed. The detail level will be kept high-level to fit within this context.

Please note, the following UML is written in PlantUML syntax and is meant to be executed in a PlantUML environment or any tool that supports PlantUML syntax.


```
@startuml
!theme plain

participant User as user
participant WebInterface as web
database OpenSpendingDB as db
participant APIServer as api
participant DataProcessingModule as processing

== Data Filtering, Sorting, and Aggregating ==

user -> web : Selects filters, sort criteria, and aggregate functions
web -> api : Requests data with specified filters, sort, and aggregate
api -> db : Fetches unprocessed data
db --> api : Returns unprocessed data
api -> processing : Sends data for processing with user criteria
processing -> processing : Filters, sorts, and aggregates data
processing --> api : Returns processed data
api --> web : Sends processed data
web --> user : Displays data according to filters, sort, and aggregates

@enduml
```

Explanation:

1. **User Interaction:** The Data Consuming User selects the desired filters, sort criteria, and aggregate functions using the Web Interface.
   
2. **Web Interface to API Request:** The Web Interface sends a request to the API server, including information on how the user wants the data filtered, sorted, and aggregated.
   
3. **API Server Processing:** The API server fetches the necessary unprocessed data from the OpenSpending Database.
   
4. **Data Processing Module:** The API server passes the unprocessed data along with the user's specifications to the Data Processing Module, which then filters, sorts, and aggregates the data according to the specified criteria.
   
5. **Return Processed Data:** Finally, the processed data is sent back from the Data Processing Module to the API server and then to the Web Interface, where it's presented to the user in the desired format.

This sequence diagram outlines the core interactions and data flow for a Data Consuming User to filter, sort, and aggregate data on the OpenSpending platform. It abstracts the complexities that might be involved in the actual data processing and assumes the presence of a dedicated Data Processing Module to handle user requests efficiently. Future enhancements to the platform could iterate on the depicted interactions for increased efficiency and scalability.