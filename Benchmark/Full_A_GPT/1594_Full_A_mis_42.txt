To create a detailed sequence diagram in PlantUML format for the user story provided, we need to outline the interactions between different components required to display a dashboard widget showing a summary of recent submissions to a collection for a curator. Below is a basic example of how this could be represented in PlantUML syntax:

```plantuml
@startuml
actor Curator as curator
participant "Dashboard" as dashboard
participant "Database" as db
participant "SubmissionService" as service
participant "CollectionWidget" as widget

== Curator Requests Dashboard ==

curator -> dashboard: Request Dashboard View
dashboard -> service: Fetch Recent Submissions
service -> db: Query Submissions by Date

== Database Processes Request ==

db --> service: Return Submission Data
service --> dashboard: Process Submission Summary
dashboard -> widget: Prepare Collection Widget
widget --> dashboard: Display Recent Submissions

== Curator Views Dashboard ==

dashboard --> curator: Show Dashboard with Widget

@enduml
```

In this sequence diagram:

1. **Curator (actor)**: Initiates the process by requesting to view their dashboard, which includes the collection summary widget.
2. **Dashboard (participant)**: Represents the dashboard interface that the curator interacts with.
3. **SubmissionService (participant)**: A backend service responsible for fetching recent submissions from the database.
4. **Database (participant)**: The system where submission data is stored. It receives queries from the SubmissionService.
5. **CollectionWidget (participant)**: A component of the dashboard specifically designed to show the summary of recent submissions to the curator's collection.

Each arrow represents a request or data transmission between participants, with the sequence showing the flow of operations from the curator's request to the display of the submission summary. The comments (== Curator Requests Dashboard ==, == Database Processes Request ==, and == Curator Views Dashboard ==) divide the diagram into logical sections for clarity.

This PlantUML sequence diagram provides a high-level overview of the interactions and could be elaborated further based on more specific requirements or system components within the Enhanced Digital Repository Management System (EDRMS) project.