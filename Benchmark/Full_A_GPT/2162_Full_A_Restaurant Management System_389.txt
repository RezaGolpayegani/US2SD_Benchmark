Creating a detailed sequence diagram for the user story "As an owner, I want to see total sales on a daily basis, so that I can learn how much sales restaurant made" involves illustrating how system components interact to achieve the goal. Below is a PlantUML code snippet that depicts the sequence of operations from the owner requesting the daily sales report to receiving it.

```plantuml
@startuml
actor Owner
participant "UI Dashboard" as UI
participant "Backend Server" as Backend
participant "Sales Module" as Sales
participant "Database" as DB

Owner -> UI : Request daily sales report
UI -> Backend : Fetch daily sales data
Backend -> Sales : Request sales data for specific date
Sales -> DB : Query sales transactions
DB -> Sales : Return sales transactions
Sales -> Backend : Compile sales report
Backend -> UI : Send compiled report
UI -> Owner : Display sales report
@enduml
```

### Explanation of the Sequence Diagram:

1. **Owner Requests Daily Sales Report**: The interaction begins with the owner requesting the daily sales report. This action typically happens through the restaurant management system's UI dashboard.

2. **UI Dashboard Communicates with the Backend Server**: The UI dashboard sends a request to the backend server to fetch the required sales data for the specified day.

3. **Backend Server Requests Data from Sales Module**: The backend server, upon receiving the request, contacts the sales module asking for the sales data of the requested day.

4. **Sales Module Queries the Database**: The sales module then performs a query on the database to retrieve all sales transactions that occurred on the specific date.

5. **Database Returns Sales Transactions**: The database processes the query and returns the result set containing the sales transactions to the sales module.

6. **Sales Module Compiles Sales Report**: With the data retrieved, the sales module compiles a report summarizing the total sales for the day.

7. **Backend Server Sends Compiled Report to UI Dashboard**: The compiled daily sales report is sent back through the backend server to the UI dashboard.

8. **UI Dashboard Displays the Sales Report to the Owner**: Finally, the UI dashboard presents the compiled sales report to the owner, fulfilling the request.

This sequence diagram outlines the basic interaction flow within the Restaurant Management and Operations System for an owner requesting the daily sales report. The steps are simplified to illustrate the primary interactions and could be expanded with more detailed sub-processes, error handling, and security measures in a comprehensive system implementation.