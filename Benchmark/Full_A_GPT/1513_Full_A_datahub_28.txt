Creating a detailed sequence diagram for the outlined user story in PlantUML format requires us to detail the interactions between the user (in this case, the Consumer) and the system components of the Data Registry and Publishing Platform. This includes interactions with the web interface, back-end server, database, and potentially other services that facilitate the display of example data packages to the Consumer.

Note: The narrative you provided guides the identification of actors and system components but does not detail specific implementation technologies (e.g., whether the system uses REST APIs, direct database access, etc.). Therefore, the sequence diagram will abstract some of these lower-level details to focus on the logical flow.

```plantuml
@startuml
participant Consumer as consumer
actor "Web Interface" as web_interface
actor "Back-end Server" as backend_server
database "Database" as database

== Example Data Package Viewing ==

consumer -> web_interface : Navigate to home page
web_interface -> backend_server : Request featured data packages
backend_server -> database : Query for example data packages
database --> backend_server : Return example data package metadata
backend_server --> web_interface : Display example data packages
web_interface --> consumer : Present example data packages

@enduml
```

### Explanation:
1. **Consumer navigates to home page:** This is the starting point where the Consumer expresses their intent to find example data packages by visiting the platform's home page (or examples section).

2. **Web Interface requests featured data packages:** The web interface, upon receiving the Consumer's request (implied by their navigation action), communicates with the back-end server to retrieve a curated or predefined set of example data packages. This could be a featured selection set by platform admins or based on popularity.

3. **Back-end Server queries the Database:** The back-end server processes the request by querying the platform's database for the metadata of example or featured data packages. This likely involves executing a database query to fetch records marked as examples or featured within the system.

4. **Database returns example data package metadata:** The database responds to the query with the metadata of the example data packages. This metadata might include names, descriptions, tags, and possibly preview data or links to more detailed information.

5. **Back-end Server processes and sends data to the Web Interface:** After receiving the metadata from the database, the back-end server processes it (if necessary) and sends the information to the web interface. This could involve formatting the data or adding additional information required by the front end.

6. **Web Interface presents example data packages to the Consumer:** Finally, the web interface updates to display the example data packages to the Consumer, allowing them to quickly get a sense of what is available on the site.

This simplified view encapsulates the core interactions involved in fetching and displaying example data packages to a Consumer. It abstracts away specific implementation details, focusing on the flow of data and control among components.