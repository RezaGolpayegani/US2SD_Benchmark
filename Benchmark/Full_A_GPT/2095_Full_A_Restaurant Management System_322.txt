Creating a detailed sequence diagram for the specific user story where an employee wants to add new information about themselves to their employee data involves depicting the interactions between different components of the system. Since PlantUML code needs to be written as plain text, I'll guide you through the creation of a representation of these interactions.

For the sake of this example, let's focus on a simplified process where an employee accesses the system through a user interface (UI), interacts with the backend server which then updates the database. This scenario assumes the UI is a web application used by the restaurant employees.

```plantuml
@startuml
participant "UI: Employee Interface" as UI
participant "Server: Application Backend" as Server
database "DB: Employee Data" as DB

== Add New Employee Information ==

UI -> Server: Request to update employee data
activate Server

Server -> DB: Retrieve current employee data
activate DB
DB --> Server: Current employee data
deactivate DB

Server -> Server: Process and validate new data
Server -> DB: Update employee data with new information
activate DB
DB --> Server: Confirmation of update
deactivate DB

Server --> UI: Confirmation of data update
deactivate Server

UI --> Employee: Display confirmation message
@enduml
```

This PlantUML script illustrates the basic flow of adding new information to an employee's data:

1. The employee interacts with the User Interface (UI) of the Employee Interface to initiate the process of updating their data.
2. The UI sends a request to the backend server to update the employee's data.
3. The server then retrieves the current data of the employee from the database.
4. Once the current data is retrieved, the server processes and validates the new information provided by the employee.
5. After validating the new information, the server updates the employee's data in the database with the new information.
6. The database confirms the update to the server.
7. The server sends a confirmation of the update back to the UI.
8. Finally, the UI displays a confirmation message to the employee, indicating that their data was successfully updated.

This sequence ensures that the process of updating employee information is handled efficiently, with data validation and confirmation steps integrated to maintain data integrity and inform the user of the successful update.