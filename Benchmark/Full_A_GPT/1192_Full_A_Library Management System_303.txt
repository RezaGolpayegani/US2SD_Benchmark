To create a detailed sequence diagram for the user story "As a member, I want to see the shelf number of the sold book so I can track the location of the book," we'll outline the interaction between components in the Comprehensive Library Management System (CLMS) using Plant UML syntax. This diagram places emphasis on the interactions initiated by a library member who is searching for the shelf location of a book.

Please note that this sequence diagram assumes a basic flow where the library member accesses the library system, performs a search for the book, and then views the book details including the shelf number. The implementation can vary based on the specific software architecture, but this should provide a solid conceptual foundation.

```plantuml
@startuml
actor Member
participant "Search Interface" as SI
participant "Library System" as LS
participant "Database" as DB
participant "Book Details" as BD

== Search for Book ==
Member -> SI: Enter search query\n(title, author, etc.)
SI -> LS: Search request
activate LS
LS -> DB: Query book information
activate DB
DB --> LS: Return book results
deactivate DB
LS --> SI: Display search results
deactivate LS
Member -> SI: Select book from results

== View Book Details ==
SI -> LS: Request book details (incl. shelf number)
activate LS
LS -> DB: Query selected book details
activate DB
DB --> LS: Return book details\n(incl. shelf number)
decrease DB
LS --> BD: Display book details\n(incl. shelf number)
deactivate LS
Member -> BD: View shelf number

@enduml
```

This sequence diagram starts with the library member initiating a search through the Search Interface (SI), which communicates with the Library System (LS) to fetch the requested book information from the Database (DB). Once the search results are returned and displayed, the member selects a book to view its details. The Library System then retrieves detailed information, including the shelf number, from the Database, and presents it through the Book Details component/interface for the member to view.

Keep in mind, this diagram is simplified to encapsulate the main steps involved in fulfilling the user story. Depending on the complexity and design of the CLMS, additional components like authentication services, book detail caching services, or even an integration with an internal mapping service to visually guide the member to the book's location, might also be part of the system.