To create a detailed sequence diagram in PlantUML format for the described user story, we will focus on the interactions between the dataset developer and the components of the dataset management and version control system. The process involves the dataset developer requesting a list of dataset instances using a specific dataset type or version, and the system responding with the requested information.

Here's how the sequence diagram can be laid out in PlantUML syntax:

```plantuml
@startuml
participant DatasetDeveloper as developer
participant "Dataset Management \n System API" as API
participant "Dataset Type & Version \n Management Component" as TypeVersionManager
participant "Dataset Instance \n Storage" as Storage

developer -> API : Request list of dataset instances\n(using dataset type/version)
API -> TypeVersionManager : Fetch dataset type/version details
activate TypeVersionManager
TypeVersionManager -> Storage : Query instances of the specified\ndataset type/version
activate Storage
Storage --> TypeVersionManager : Return list of dataset instances
deactivate Storage
TypeVersionManager --> API : Provide dataset instances information
deactivate TypeVersionManager
API --> developer : Display dataset instances list
@enduml
```

This sequence diagram starts with the `DatasetDeveloper` requesting a list of dataset instances that use a specific dataset type or a version of a type. The request is handled by the `Dataset Management System API`, which in turn queries the `Dataset Type & Version Management Component` to fetch details about the requested dataset type or version. The `Dataset Type & Version Management Component` communicates with the `Dataset Instance Storage` to retrieve the list of dataset instances corresponding to the specified criteria. Finally, the requested information is passed back to the dataset developer through the API.

To visualize this diagram, you would need to use a PlantUML environment or an online PlantUML editor by copying and pasting the given code. This would generate a graphical representation of the interaction between different components of the system as described in the user story.