Given your request, here's a detailed PlantUML sequence diagram representing the interaction flow where a researcher wants to contact an author of a work within the comprehensive digital repository system for Cornell University:

```plantuml
@startuml
participant Researcher
participant "Search Interface" as Search
participant "System Database" as Database
participant "Work Profile Page" as Profile
participant "Messaging System" as Messaging
participant Author

Researcher -> Search : Enter search query\n(Search for work)
Search -> Database : Query for works
Database --> Search : Return search results
Search --> Researcher : Display search results

Researcher -> Profile : Select a work
Profile -> Database : Retrieve work details
Database --> Profile : Display work details, author info

Researcher -> Profile : Click "Contact Author"
Profile -> Messaging : Initiate contact form
Messaging --> Researcher : Display contact form

Researcher -> Messaging : Fill in and submit form\n(Message to Author)
Messaging -> Database : Log communication attempt
Database --> Messaging : Confirm message logged

Messaging -> Author : Send message
Author --> Messaging : Receive notification and message
Messaging --> Researcher : Display confirmation\n(Message sent)

@enduml
```

In this sequence diagram:

1. **The Researcher** starts by entering a search query in the **Search Interface** to find a particular work.
2. The **Search Interface** forwards this query to the **System Database**, which then returns the relevant search results.
3. The **Researcher** selects a work from the search results, prompting the **Work Profile Page** to retrieve and display detailed information about the work, including information about the author.
4. Interested in contacting the author, the **Researcher** initiates a contact form provided by the **Messaging System** through the **Work Profile Page**.
5. Upon filling in and submitting the contact form, the **Messaging System** logs this communication attempt in the **System Database** and sends a message to the **Author**.
6. The **Messaging System** confirms to the **Researcher** that the message has been sent by displaying a confirmation message.
7. The **Author** receives a notification and the message from the **Messaging System**, completing the flow.

This diagram simplifies the process but covers the essential steps for a researcher to contact an author within the proposed digital repository system for Cornell University. Adjustments might be needed depending on the specific implementation details and system capabilities.