For your request, below is a PlantUML code representing a detailed Sequence Diagram based on the user story: "As a librarian, I want to add new books so that members can see new books."

Please note that to visualize this sequence diagram, you will need to use a tool or platform that supports PlantUML code rendering.

```plantuml
@startuml
actor Librarian as L
participant "Library Management\nSystem" as LMS
participant Database as DB

== Add New Book Process ==

L -> LMS : Access Add Book Section
activate LMS
LMS -> DB : Validate Librarian Access
activate DB
DB --> LMS : Access Granted
deactivate DB

LMS <-- L : Enters Book Details\n(Title, Author, Category, etc.)
LMS -> DB : Check if Book Already Exists
activate DB
DB --> LMS : Book Not Found
deactivate DB

LMS -> DB : Save New Book Details
activate DB
DB --> LMS : Book Added Successfully
deactivate DB

LMS --> L : Display Success Message\n(Book Added)
deactivate LMS

@enduml
```

### Explanation:
This sequence diagram outlines the process flow for a librarian adding a new book to the Comprehensive Library Management System (CLMS):

1. **Access Add Book Section**: The librarian accesses the section of the library management system where new books can be added.
2. **Validate Librarian Access**: The system checks the database to ensure that the person trying to add a book has the appropriate librarian access.
3. **Enters Book Details**: The librarian enters details about the book such as title, author, subject category, etc.
4. **Check if Book Already Exists**: Before adding, the system checks in the database if the book already exists to avoid duplicates.
5. **Save New Book Details**: If the book is not found in the existing records, the system proceeds to save the new book details in the database.
6. **Book Added Successfully**: Once the book is added, the system shows a success message to the librarian confirming the book has been added.

Note: To execute and visualize this diagram, you will need to use a PlantUML editor or an integrated development environment (IDE) that supports PlantUML.