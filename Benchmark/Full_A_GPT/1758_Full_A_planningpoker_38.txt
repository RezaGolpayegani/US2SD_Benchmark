Creating a detailed sequence diagram for the specified user story in PlantUML format involves defining the objects and interactions involved in resetting the two-minute timer automatically for a new estimation round after all participants have played their estimate. The main objects in this scenario might include the Participant, Game Session, Estimation Round, and Timer. 

Below is a basic outline in PlantUML syntax, which provides a foundation that you might expand upon based on the particular requirements and logic of the Agile Estimation and Planning Tool (AEPT).

```plantuml
@startuml
participant Participant as p
participant "Game Session" as gs
participant "Estimation Round" as er
participant Timer as tm

== Estimation ==
p -> gs : Join session
activate gs
gs -> er : Initiate round
activate er
er -> tm : Start two-minute timer
activate tm
tm --> er : Notify expiry
deactivate tm

== Submitting Estimates ==
loop For each Participant
    p -> er : Submit estimate
    activate p
    er -> er : Check if all estimates are in
    deactivate p
end

== All Estimates Submitted ==
er -> tm : All estimates submitted
tm -> tm : Reset timer for next round
activate tm
tm --> er : Timer reset
deactivate tm

er --> gs : Round complete
deactivate er

== Next Round ==
gs -> er : Initiate new round
activate er
er -> tm : Start two-minute timer for new round
activate tm

@enduml
```

**Explanation of the Sequence Diagram:**

1. **Estimation Round Start:** At the beginning of an estimation round, a participant joins the game session, which then initiates a new estimation round and starts the two-minute timer.
2. **Submitting Estimates:** Each participant submits their estimate to the current round. The system checks if all participants have submitted their estimates.
3. **Timer Reset:** Once all estimates are in, the estimation round signals that all estimates have been submitted. The timer then resets itself for the next round, making it ready for use immediately after the complete submission.
4. **Round Complete:** The round is marked complete, and a new round can be initiated by the game session, starting the two-minute timer anew for this round.

This diagram is a simplified representation and may need adjustment to fit the specific handling of timer reset logic, participant submissions, and round transitions within the AEPT. Additionally, depending on the system architecture, there might be more direct communication between the timer and the game session or other components to manage the complete workflow more efficiently.