Creating a detailed PlantUML sequence diagram based on the specific user story of improving logging capabilities for Developers involves displaying the interactions between the Developer and various components of the system such as the Logging System, Broker Platform, and potentially an external monitoring tool like New Relic. This sequence diagram aims to illustrate how a Developer can initiate better logging for troubleshooting submission issues.

Please copy the following PlantUML code into a PlantUML editor or online tool to visualize the sequence diagram:

```plantuml
@startuml

participant Developer
participant BrokerPlatform as "Broker Platform"
database LoggingSystem as "Logging System"
participant NewRelic as "New Relic (Optional)"

Developer -> BrokerPlatform : Request to enable detailed logging
activate BrokerPlatform

BrokerPlatform -> LoggingSystem : Initiate enhanced logging level
activate LoggingSystem
LoggingSystem --> BrokerPlatform : Acknowledge logging level set
deactivate LoggingSystem

BrokerPlatform --> Developer : Confirm logging enabled
deactivate BrokerPlatform

Developer -> BrokerPlatform : Perform actions causing issues
activate BrokerPlatform

BrokerPlatform -> LoggingSystem : Log detailed information
activate LoggingSystem
LoggingSystem --> BrokerPlatform : Log stored
deactivate LoggingSystem

BrokerPlatform --> Developer : Notify action logged
deactivate BrokerPlatform

Developer -> LoggingSystem : Retrieve logs
activate LoggingSystem
LoggingSystem --> Developer : Provide detailed logs

note right of Developer
  Developer reviews logs for
  errors and potential causes
end note

Developer -> NewRelic : Query related metrics (Optional)
activate NewRelic
NewRelic --> Developer : Provide metrics and performance data
deactivate NewRelic

note over Developer
  Developer uses logs and metrics
  to troubleshoot issues
end note

@enduml
```

### Explanation of the Sequence Diagram:

- **Developer Requests Detailed Logging:** The Developer requests the Broker Platform to enable a higher level of detail in logging, aiming to capture more granular information for troubleshooting.

- **Broker Platform Enhances Logging Level:** The Broker Platform interfaces with the Logging System to enhance the logging level as per the Developer's request.

- **Confirmation & Action Logging:** The Broker Platform confirms to the Developer that the detailed logging has been enabled. Subsequently, as the Developer performs actions that trigger issues, these actions and their details are logged.

- **Log Retrieval:** The Developer accesses the Logging System to retrieve the detailed logs for review to identify and understand the cause of the issues.

- **(Optional) Querying Metrics with New Relic:** Optionally, the Developer may use an external tool like New Relic to fetch additional metrics and performance data to complement the troubleshooting process.

This sequence diagram provides an overview of the steps involved in improving logging for Developers to facilitate better troubleshooting of issues on the Broker Platform.