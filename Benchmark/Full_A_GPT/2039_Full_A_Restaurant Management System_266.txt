Certainly! To create a sequence diagram in PlantUML format that represents the user story: "As a restaurant owner, I want to report the total working hours daily and monthly so that I can arrange their salaries," you need to outline the flow of actions taken by the restaurant owner and how the system responds to generate the report. This process involves interactions between the restaurant owner, the system's backend (which might include employee scheduling and shift management components, database, and reporting services), and possibly, the payroll system.

Here's a simple representation of such a sequence diagram in PlantUML code:

```plantuml
@startuml
actor Owner as owner
participant "Employee Management \n System" as EMS
participant "Database" as DB
participant "Reporting Service" as RS
participant "Payroll System" as PS

owner -> EMS : Request total working hours
EMS -> DB : Query employee working hours
DB -> EMS : Return working hours data
EMS -> RS : Generate working hours report
RS -> EMS : Return report (Daily and Monthly)
EMS -> owner : Display report

owner -> EMS : Request payroll calculation
EMS -> PS : Send working hours data
PS -> EMS : Return calculated salaries
EMS -> owner : Display calculated salaries

@enduml
```

### Explanation of the Sequence Diagram:

1. **Owner to Employee Management System (EMS)**: The restaurant owner requests a report on the total working hours of employees. This request is made to the Employee Management System.

2. **EMS to Database (DB)**: The EMS forwards this request to the database to query the stored employee working hours data.

3. **Database to EMS**: The database provides the requested working hours data back to the EMS.

4. **EMS to Reporting Service (RS)**: With the data retrieved, the EMS requests the Reporting Service to generate a working hours report, specifying that both daily and monthly reports are needed.

5. **Reporting Service to EMS**: The Reporting Service processes the request and returns the generated reports to the EMS.

6. **EMS to Owner**: The EMS then presents these reports to the restaurant owner, showing the total working hours as requested.

7. **Owner Requests Payroll Calculation**: Based on the total working hours, the restaurant owner requests a calculation for employee salaries.

8. **EMS to Payroll System (PS)**: The EMS sends the working hours data to the Payroll System to compute the salaries based on the reported hours.

9. **Payroll System to EMS**: The Payroll System calculates the salaries and returns this information to the EMS.

10. **EMS to Owner**: Finally, the EMS displays the calculated salaries to the restaurant owner.

This sequence diagram represents a simplified view of the interaction flow necessary to fulfil the restaurant owner's user story. Depending on the specifics of the Restaurant Management and Operations System and its integration with any payroll system, additional steps or systems might be involved.
