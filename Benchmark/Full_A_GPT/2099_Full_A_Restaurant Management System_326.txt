Creating a detailed sequence diagram for the user story "As an employee, I want to add my contact information" requires illustrating how different parts of the system interact to achieve this functionality. Below is a PlantUML format sequence diagram that captures the process:

```plantuml
@startuml
actor Employee as emp
participant "UI Interface" as ui
participant "Employee Service" as es
database "Database" as db

emp -> ui : Access profile settings
ui -> es : Request to add contact information
emp -> ui : Enter contact information \n (phone number, email)
ui -> es : Submit contact information
es -> db : Validate and save contact information
db --> es : Confirmation of saved information
es --> ui : Show success message
ui --> emp : Display success message

@enduml
```

Explanation:

1. **Employee Interaction (Start)**: The sequence begins with the employee accessing their profile settings on the UI (User Interface). This could be a webpage or a mobile app part of the Restaurant Management and Operations System.

2. **Entering Contact Information**: The employee then enters their contact information, such as phone number and email, into the provided fields on the UI.

3. **Submission**: Once the entered data is ready, the employee submits this information. The request to update this information is sent to the Employee Service, a backend service designed to handle employee-related data.

4. **Validation and Saving**: The Employee Service validates the provided contact information (this step is critical to ensure data integrity and potentially prevent issues like SQL injection or storing invalid data). Once validated, the information is saved to the Database, which can be a relational database like PostgreSQL or a NoSQL database like MongoDB.

5. **Confirmation and Feedback**: After successful saving, a confirmation of this action is sent back to the UI, which in turn shows a success message to the employee, confirming that their contact information has been updated.

This sequence diagram defines a simplistic view of the interaction flow based on the project's technology stack. The actual implementation might include additional security steps like authentication and authorization checks, as well as error handling routines that are not detailed here for the sake of simplicity.