Creating a detailed sequence diagram for the specified user story involves representing the interaction between different system components and actors to fulfill the request of keeping track of users who return their books after the due date. Here's how you can represent this sequence in PlantUML format:

```plantuml
@startuml
actor Librarian
participant "Library System" as System
participant Database

Librarian -> System : Check overdue books
activate System

System -> Database : Retrieve overdue book transactions
activate Database

Database --> System : Overdue Transactions List
deactivate Database

System --> Librarian : Display Users with Overdue Books
deactivate System

Librarian -> System : Update User Profile/Record
activate System

System -> Database : Log Overdue Return
activate Database

Database --> System : Confirmation
deactivate Database

System --> Librarian : Display Confirmation Message
deactivate System

@enduml
```

This diagram details the following steps:
- The Librarian requests to check overdue books through the Library System.
- The System queries the Database to retrieve transactions that are overdue.
- The Database returns a list of overdue transactions to the System.
- The System displays the information about users with overdue books to the Librarian.
- The Librarian then updates the user profile or records, perhaps marking a fine or noting the late return in the system for future reference.
- The System logs this overdue return in the Database.
- The Database sends a confirmation back to the System.
- The System then displays a confirmation message to the Librarian, confirming that the record has been updated.

This sequence diagram assumes a simplified view of the interactions involved in tracking users who return their books after the due date. Depending on the specific requirements and design of the CLMS, additional steps or alternative sequences may be necessary.