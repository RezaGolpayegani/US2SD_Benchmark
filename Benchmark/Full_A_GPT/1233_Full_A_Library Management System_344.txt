Creating a detailed sequence diagram for the process of displaying a book's reservation status involves several actors and systems. For simplicity, the diagram focuses on the core interactions between a staff member, the library management system (CLMS), and the database.

Given the scope of the request, here's a PlantUML code snippet that represents the desired sequence diagram:

```plantuml
@startuml
actor Staff
participant "Library Management\nSystem (CLMS)" as CLMS
database "Library Database" as DB

== Display Book Reservation Status ==

Staff -> CLMS: Request reservation status for book
activate CLMS

CLMS -> DB: Query reservation details for book
activate DB

DB --> CLMS: Return reservation details
deactivate DB

CLMS --> Staff: Display reservation status
deactivate CLMS

@enduml
```

This PlantUML sequence diagram illustrates the following steps to display the reservation status of a book:

1. **Staff request:** The staff member initiates the process by requesting the reservation status for a specific book through the CLMS interface.

2. **System processes request:** The CLMS then processes this request. This step involves formulating a query or accessing the appropriate service/module within the system designed to handle reservation status inquiries.

3. **Query the database:** CLMS communicates with the library's database to retrieve the reservation details of the requested book. This involves a database query where the system might look up the book by its unique identifier (e.g., ISBN, library ID) to fetch the current reservation status.

4. **Database response:** The library database processes the query and returns the relevant reservation details back to the CLMS.

5. **Display status:** The CLMS, upon receiving the book's reservation details from the database, displays the information to the staff member. This could be in the form of a status indicator (e.g., Available, Reserved, Waitlisted) along with additional details if necessary (e.g., expected return date, number of reservations).

This diagram and the steps outlined assume a straightforward interaction for checking a book's reservation status. Complexities such as handling multiple concurrent requests, error handling, and security checks (to ensure the staff member has the necessary permissions) are abstracted for clarity.