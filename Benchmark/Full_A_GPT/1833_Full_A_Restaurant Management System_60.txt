Creating a detailed Sequence Diagram for the given user story involves depicting the interactions between the customer and the various components of the Restaurant Management and Operations System. To facilitate this, we will illustrate a typical sequence where a customer contacts the system to view and keep records of their orders.

Please note, to transform this PlantUML code into a visual sequence diagram, you will need to use a PlantUML compatible tool or editor.

```plantuml
@startuml
actor Customer
participant "Web Interface" as Web
participant "API Gateway" as API
participant "Order Management Service" as Order
database "Database" as DB

== Keeping Records of Orders by Restaurant ==

Customer -> Web: Select "My Orders"
Web -> API: Request order history
API -> Order: Get customer orders
Order -> DB: Query orders by customer ID
DB -> Order: Return orders list
Order -> API: Return orders data
API -> Web: Display orders to customer
Web -> Customer: Show order history by restaurant

== Customer Reviews Order Details ==

Customer -> Web: Select order details by restaurant
Web -> API: Request specific order details
API -> Order: Get details for selected order
Order -> DB: Query detailed order info
DB -> Event: Return detailed info
Order -> API: Return order details
API -> Web: Display detailed order
Web -> Customer: Show order details

@enduml
```

This PlantUML sequence diagram outlines the steps a customer would go through to keep records of their orders by restaurant, specifically highlighting the interactions between the customer and the system's components.

1. **Customer Initiates Action**: The customer interacts with the web interface to view their order history.
2. **Web to API Request**: The customer's request is forwarded to the API gateway.
3. **API to Order Management Service**: The API gateway requests the order history from the Order Management Service.
4. **Order Service Queries Database**: The Order Management Service queries the database for orders related to the customer.
5. **Database Returns Orders List**: The database returns the list of orders to the Order Management Service.
6. **Orders Displayed to Customer**: Order details are sent back through the API and web interface to display them to the customer.
7. **Reviewing Specific Order Details**: For more in-depth information, the customer can select a specific order to view its details, triggering a similar sequence that ends with the display of detailed order information.

Remember, to visualize this sequence diagram, the PlantUML code must be used with a compatible tool or environment that supports PlantUML syntax.