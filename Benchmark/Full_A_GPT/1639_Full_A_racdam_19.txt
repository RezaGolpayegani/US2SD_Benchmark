Creating a detailed sequence diagram for the user story "As an archivist, I want to automatically generate technical metadata, so that I know the file size," entails illustrating the interaction between different system components involved in generating and recording technical metadata, specifically focusing on the file size. Here's how the sequence might be represented in PlantUML format:

```plantuml
@startuml
actor Archivist as archivist
participant "Web Interface" as UI
participant "Upload Service" as upload
participant "Metadata Generation Service" as metadataService
participant "Database" as db

archivist -> UI: Upload digital file
UI -> upload: Initiate file upload
upload -> metadataService: Send file for metadata generation
metadataService -> metadataService: Extract technical metadata \n(e.g., file size)
metadataService -> db: Store technical metadata
db -> metadataService: Confirm metadata stored
metadataService -> upload: Notify upload success and metadata extraction
upload -> UI: Confirm upload and display file size to Archivist
@enduml
```

This sequence diagram follows a simplified flow and does not account for error handling or security checks, which would be essential in a real-world scenario. The process starts with an archivist uploading a digital file through a web interface. The file is then sent to an "Upload Service," which initiates the metadata extraction process by contacting a "Metadata Generation Service." This service is responsible for extracting the technical metadata, including the file size, and storing it in a database. Once the technical metadata is successfully stored, the "Metadata Generationâ€™service notifies the "Upload Service" of the successful upload and metadata extraction. Finally, the web interface updates to confirm the successful upload and displays the extracted file size to the archivist.