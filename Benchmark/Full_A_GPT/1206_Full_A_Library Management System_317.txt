To create a detailed Sequence Diagram for the user story "As a member, I want to view which books I borrowed with their due dates" using PlantUML, you would need to represent the interactions between the user (member), the front end of the Comprehensive Library Management System (CLMS), and the backend system (database) that retrieves the information about borrowed books and their due dates. Below is a simplified sequence diagram in PlantUML code format that illustrates these interactions:

```plantuml
@startuml
actor Member as member
participant "UI Interface" as ui
participant "Server" as server
database "Database" as db

member -> ui : Accesses borrowed books page
ui -> server : Request to retrieve borrowed books
server -> db : Query borrowed books and due dates
db -> server : Return list of books and due dates
server -> ui : Display list of borrowed books with due dates
ui -> member : Shows borrowed books and due dates
@enduml
```

How to read the diagram:
1. The **member** accesses the borrowed books page on the CLMS user interface (UI).
2. The **UI** sends a request to the server to retrieve the information about the books the member has borrowed.
3. The **server** then queries the **database** for borrowed books and their due dates for that specific member.
4. The **database** returns the list of borrowed books along with their due dates to the server.
5. The **server** processes this information and sends it back to the UI.
6. Finally, the UI displays this list to the member, showing which books have been borrowed and their corresponding due dates.

This diagram is a high-level overview of the process. Depending on the complexity and specific requirements of the CLMS, additional steps or components (like error handling, caching, or event logging) could be included for a more detailed representation.