Given your request, I'll draft a detailed sequence diagram in PlantUML syntax to visualize the interactions involved in a user discovering the properties, allowable values, and defaults for a given dataset type during dataset instance creation. This scenario assumes a framework where a user can interact through a UI or CLI, the system queries a dataset management service, and possibly involves fetching information from a metadata repository.

```plantuml
@startuml
actor User
participant "UI/CLI" as UI
participant "Dataset Management\nService" as DMS
database "Metadata Repository" as MetaRepo

== User Requests Dataset Type Information ==

User -> UI: Request dataset type properties
activate UI
UI -> DMS: Fetch dataset type details
activate DMS

DMS -> MetaRepo: Query dataset type metadata
activate MetaRepo
MetaRepo -> DMS: Return dataset type metadata
deactivate MetaRepo

== Processing Information ==

DMS -> DMS: Process metadata to extract\nproperties, allowed values, defaults
DMS -> UI: Respond with dataset type details

== Display Information to User ==

UI -> User: Display properties, allowed values,\nand default settings
deactivate DMS
deactivate UI

@enduml
```

### Explanation:

1. **User Interaction**: The user initiates a request to find out details about the dataset type through a UI or CLI interface.

2. **Fetching Details**: The UI/CLI layer communicates this request to the Dataset Management Service (DMS), which is responsible for handling such queries.

3. **Metadata Query**: The DMS then queries a Metadata Repository to fetch detailed metadata about the requested dataset type. This repository contains all the information about dataset types, including their properties, permissible values, and default configurations.

4. **Processing Information**: Upon receiving the metadata, the DMS processes this information to extract the relevant details about properties, allowed values, and defaults specifically requested by the user.

5. **Response to User**: Finally, the processed information is sent back to the UI/CLI, which then presents the information to the user in an understandable format.

This sequence diagram and the associated explanation provide a high-level overview of the interactions involved when a user wishes to discover properties, allowable values, and default settings for a dataset type within an advanced dataset management and version babel control system, tailored for application ecosystems.