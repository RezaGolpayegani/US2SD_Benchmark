@startuml
actor Publisher as P
participant "UI Dashboard" as UI
participant "API Gateway" as API
participant "Authentication Service" as AS
participant "Data Management Service" as DMS
participant "Storage" as S
participant "Validation Service" as VS
participant "Versioning Service" as VerS

P -> UI : Selects "Create Data Package"
UI -> P : Presents Data Package Form

P -> UI : Fills in data package details and submits
UI -> API : POST /data-packages/create
API -> AS : Validate Publisher's session
AS -->> API : Session valid

API -> DMS : Request to create data package
DMS -> S : Store initial data package files
S -->> DMS : Confirm storage

DMS -> DMS : Generate data package ID
DMS -> VS : Validate data package
VS -->> DMS : Validation Success

DMS -> VerS : Create initial version
VerS -->> DMS : Version Info

DMS -->> API : Data package created successfully
API -->> UI : Show success message

P -> UI : Requests to publish the data package
UI -> API : POST /data-packages/publish/{packageId}
API -> DMS : Request to change status to "Published"
DMS -> VerS : Tag current version as "Published"
VerS -->> DMS : Version tagged

DMS -->> API : Data package published successfully
API -->> UI : Show publication success message
UI -->> P : Data package is now available and published

@enduml