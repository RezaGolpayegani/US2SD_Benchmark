@startuml
autonumber
participant ":Web Browser" as UserInterface
participant ":AuthenticationService" as Auth
participant ":UserSession" as Session
participant ":PlanReviewModule" as PlanReview
participant ":Database" as DB
participant ":ApplicantAccount" as Applicant
participant ":NotificationService" as Notify

== Authentication ==
UserInterface -> Auth: login(credentials)
Auth -> Session: createSession()
Session --> UserInterface: sessionDetails

== Plan Review Process ==
UserUserInterface -> PlanReview: selectPlansForReview()
alt Plan Review In Progress
    PlanReview -> DB: fetchPlans(status="submitted")
    DB --> PlanReview: plansList
    PlanReview -> PlanReview: reviewPlans(plansList)
    loop For Each Plan
        PlanReview --> UserInterface: displayPlanDetails(plan)
        UserInterface -> PlanReview: submitReview(decision, comments)
        alt Decision Conditions
            PlanReview -> DB: updatePlanStatus(planId, status="conditions")
            DB --> PlanReview: statusUpdated
            PlanReview -> Applicant: addCorrectionRequest(planId, details)
            PlanReview -> PlanReview: logActivity(planId, "conditions added")
        else Decision Approved
            PlanReview -> DB: updatePlanStatus(planId, status="approved")
            DB --> PlanReview: statusUpdated
            PlanReview -> PlanReview: logActivity(planId, "approved")
        else Decision Denied
            PlanReview -> DB: updatePlanCoinsStatus(planId, status="denied")
            DB --> PlanReview: statusUpdated
            PlanReview -> PlanReview: logActivity(planId, "denied")
        end
        PlanReview -> Notify: sendNotification(applicantId, reviewOutcome)
        Notify -> Applicant: notifyViaEmail(notificationDetails)
    end
else No Plans For Review
    PlanReview --> UserInterface: displayMessage("No plans available for review")
end

== Review Completion ==
PlanReview --> UserInterface: displayReviewCompletionMessage()
UserInterface -> Auth: logout()
Auth -> Session: terminateSession()
Session --> User inInterface: confirmLogout()

@enduml