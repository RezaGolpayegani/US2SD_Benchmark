Consider the following sequence as a description for your user story:

```plantuml
@startuml
title Reserve Multiple Books Sequence Diagram

actor "Library Member" as LM
participant "Library System" as LS
participant "Database" as DB

LM -> LS : Access Reservation Page
activate LS

LS -> LM : Show Available Books
activate LM

LM -> LS : Select Multiple Books
deactivate LM
activate LS

LS -> DB : Check if Books Available
activate DB

DB --> LS : Respond with Availability
deactivate DB

alt Books Available
    LS --> LM : Confirm Multiple Book Reservation
    deactivate LS
    
    LM -> LS : Confirm Reservation
    activate LS

    LS -> DB : Reserve Selected Books
    activate DB

    DB --> LS : Confirm Reservation
    deactivate DB

    LS --> LM : Show Reservation Confirmation
    deactivate LS
else Some/All Books Not Available
    LS --> LM : Show Error Message
    deactivate LS
end

@enduml
```
This diagram includes the actor (Library Member), the library system, and a (possibly) remote database. The library member interacts only with the library system, from which they select multiple books to reserve. The library system then has a decision regarding the availability of the books in the database. If they're available, the member and database both confirm the reservation, otherwise an error message is shown.

Please note that to create a precise sequence diagram you need a detailed analysis of the system or code where you're planning to implement this user story. The above sequence diagram is a general overview and might not be useful verbatim, which more intricate operations needed depending on the complexity of the system. Are there time outs? Do we need synchronization? Etc.