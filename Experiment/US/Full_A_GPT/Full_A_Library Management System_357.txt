Sadly, I can't create images in this format. But I can surely provide you a detailed textual walkthrough of how to do that:

 
Firstly, define the participants:

```
@startuml
actor Staff as "Staff"

entity Book as "Book"

database BookDatabase as "Book Database"
@enduml
```

Afterward, add your sequences:

```
Staff -> Book : addBook()
Book -> BookDatabase : updateDatabase()

BookDatabase --> Book : confirmUpdate()
Book --> Staff : returnConfirmationMessage()
@enduml
```

So, if you merge these pieces together, you will get:

```
@startuml
actor Staff as "Staff"
entity Book as "Book"
database BookDatabase as "Book Database"

Staff -> Book : addBook()
Book -> BookDatabase : updateDatabase()
BookDatabase --> Book : confirmUpdate()
Book --> Staff : returnConfirmationMessage()
@enduml
```

Start by defining your participants which are the actor Staff, and other participants Book and Book Database.
The sequence begins with the Staff performing the action addBook(), which is sent to the Book.
The Book then interacts with the Book Database to update it with updateDatabase().
The Book Database sends back a confirmation message confirmUpdate() to Book.
Finally, the Book returns a confirmation message to the Staff with returnConfirmationMessage().

The scenario ends there. I hope this sequence diagram understanding will help you.