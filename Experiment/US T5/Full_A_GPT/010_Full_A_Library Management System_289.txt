Here is a simplified version of what the requested Plant UML sequence digram could look like in plain text:

```
@startuml
title Get Book Due Date Sequence Diagram

actor Member

box Library
participant "Library System" as LS
participant "Book" as B
end box

Member -> LS: Request Due Date(BookID)
activate LS

LS -> B: Get Due Date(BookID)
activate B

B --> LS: Return Due Date
deactivate B

LS --> Member: Provide Due Date info
deactivate LS

@enduml
```

In this sequence diagram, the member starts by requesting the due date of a book from the Library System (you can replace BookID with any identification means you use in your system). The Library System then asks the Book entity for its due date. The Book returns its due date to the Library System which then provides the due date info back to the Member.

This diagram assumes that each book object has the ability to report its due date. Your actual implementation may vary.