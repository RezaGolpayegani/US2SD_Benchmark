Here is a detailed sequence diagram in Plant UML format for the user story "As a reader, I want to comment on books". 

This sequence diagram assumes that a 'Reader', 'System' and 'Database' are involved classes. Reader interacts with the system to comment on a book and the system interacts with the database to store the comments.

```plantuml
@startuml
Actor Reader
Participant System
Database Database

Reader -> System: RequestBookInformation(bookId)
System -> Database: FetchBookInformation(bookId)
Database --> System: ReturnBookInformation(book)
System --> Reader: DisplayBookInformation(book)
Reader -> System: WriteComment(comment)
System ->Database: StoreComment(bookID, comment)
Database --> System: CommentStoredNotification()
System --> Reader: DisplayCommentStoredNotification()
@enduml
```

Functionality described in the above code:

1. Reader requests for the book information.
2. System fetches the book information from the database.
3. Database returns the fetched book information back to the system.
4. Information regarding the book is displayed to the reader.
5. Reader writes a comment on the book.
6. System stores the comment made by the reader in the database.
7. Database notifies the system that the comment has been stored.
8. A notification is displayed to the reader that their comment has been stored. 

Please note that the actual sequence diagram might involve more steps based on actual application flow.