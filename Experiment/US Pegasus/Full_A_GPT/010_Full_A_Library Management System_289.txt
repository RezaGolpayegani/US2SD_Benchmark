Here is a suggestion for a PlantUML sequence diagram based on the User Story: "As a member, I want to see due date."

```plantuml
@startuml
    participant Member as M
    participant "Server" as S
    participant "Database" as D

    M -> S: Clicks on borrowed books
    activate S
    S -> D: Fetches member's borrowed books with due dates
    activate D
    D --> S: Returns borrowed books with due dates
    deactivate D
    S --> M: Displays borrowed books with due dates
    deactivate S
@enduml
```
The sequence starts with the member clicking on borrowed books. The server handles this request and asks the database to fetch the information about the borrowed books and their due dates. The database returns the needed information back to the server which then presents it to the member. 

In a sequence diagram, the actors (in this case the Member, Server, and Database) are shown as boxes and the interactions are represented as arrows. The activations indicate when each actor is doing something. 

Note that this is quite simplified, the actual processes might be much more complex based on the system's structure and requirements. Also, the capability of returning the borrowed books with due dates implies that the database has been designed to store this information. This might need a User Story of its own.