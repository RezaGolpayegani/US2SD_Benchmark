It's difficult to translate this directly into PlantUML, as text-based AI doesn't 'draw' diagrams. However, it can provide a text-based outline that can be translated into PlantUML script.

Here's the sequence in detail:

1. Library Manager (actor) decides to assign a unique identification number to the book.

2. The system presents the list of books in the database. (This can be done through a 'getBooks' function.)

3. Library Manager selects a book from the list. This is expressed in an 'selectBook' function with the book details as parameter.

4. The system prompts the Library Manager to input a unique identification number. ('promptForId' function.)

5. Library Manager inputs the unique identification number. ('inputId' function with ID as parameter.)

6. The system assigns the unique ID to the selected book and updates the database. ('assignId' function with book details and ID as parameters.)

7. The system sends a confirmation message to the Library Manager. ('confirmIdAssignment' function.)

The resulting PlantUML script would look something like this:

'''
@startuml

actor "Library Manager" as LM

box "Library Management System" 
participant "Library Database" as DB
end box

LM -> DB: getBooks()
DB --> LM: presentBooks()
LM -> DB: selectBook(bookDetails)
DB --> LM: promptForId()
LM -> DB: inputId(id)
DB -> DB: assignId(bookDetails, id)
DB --> LM: confirmIdAssignment()

@enduml
'''

Note: You can paste this script into any PlantUML editor to view the sequence diagram.