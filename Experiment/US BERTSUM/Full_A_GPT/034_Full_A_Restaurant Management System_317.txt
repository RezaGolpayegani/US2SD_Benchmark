Below is a detailed sequence diagram in PlantUML format for the User Story: "As a waiter, I want to update the waiting time of the table."

```plantuml
@startuml
actor Waiter
entity "Waiter Interface" as UI
participant "Waiter Controller" as WC
database "Reservation DB" as DB

Waiter -> UI : Input the new table waiting time
UI -> WC: UpdateTableWaitingTime("new waiting time")
WC -> DB: UpdateInDatabase("new waiting time")
DB -> WC: ConfirmationMessage("Waiting time updated")
WC -> UI: ReceiveConfirmation("Waiting time updated")
UI -> Waiter : DisplayConfirmation("Waiting time updated")
@enduml
```

- The `actor` is the waiter who wants to update the waiting time.
- The waiter interacts with the "Waiter Interface" (`UI`) to input the new wait time.
- The "Waiter Interface" (`UI`) communicates with the "Waiter Controller" (`WC`), triggering the `UpdateTableWaitingTime` function and passing the "new waiting time".
- The "Waiter Controller" (`WC`) then sends the request to update the database (`DB`) through the `UpdateInDatabase` command.
- Once the database (`DB`) has been updated, it returns a `ConfirmationMessage` to the "Waiter Controller" (`WC`) indicating "Waiting time updated".
- The "Waiter Controller" (`WC`) then passes the confirmation to the "Waiter Interface" (`UI`) using the `ReceiveConfirmation` function.
- Finally, the "Waiter Interface" (`UI`) displays the confirmation to the `actor` (waiter), completing the sequence.
  
This sequence diagram illustrates the flow of actions and the communication between different entities in the system when the user (waiter) wants to update the waiting time of the table.