As a language model AI, I cannot draw a sequence diagram, however, I can provide you with the steps to create one based on your user story.

Here's how the sequence for the user story "As a manager, I want to edit employee shifts" might look:

1. Manager: The manager begins the process. They are the actor who initiates the use-case interaction. 

2. User Interface: The manager interacts with the UI, selecting an employee and then choosing the "Edit Shift" option. 

3. Shifts Service: The User Interface sends a message to the Shifts Service asking to edit the shift for the selected employee.

4. Database: The Shifts Service interacts with the database, requesting the current shift data of the selected employee.

5. Database: The database returns the current shift data to the Shifts Service. 

6. Shifts Service: The Shifts Service sends the current shift data to the User Interface. 

7. Manager: Through the User Interface, the manager adjusts the shift as they see fit.

8. User Interface: Once the manager confirms the changes, the User Interface sends an update request with the new shift data to the Shifts Service. 

9. Database: The Shifts Service updates the shift data in the database.

10. Database: Upon successful update, the database sends a confirmation message back to the Shifts Service.

11. Shifts Service: The Shifts Service sends a confirmation message to the User Interface.

12. User Interface: The User Interface then displays the updated shift to the manager. The interaction ends.

In PlantUML format, it may look something like this:

```plantuml
@startuml
actor Manager
boundary "User Interface" as UI
control "Shifts Service" as SS
database "Database" as DB

Manager -> UI: Select employee\nSelect edit shift
UI -> SS: Request to edit shift
SS -> DB: Get current shift data
DB --> SS: Return current shift data
SS --> UI: Send current shift data
Manager -> UI: Adjusts and confirms shift changes
UI -> SS: Update request with new shift data
SS -> DB: Update shift data
DB --> SS: Confirmation message
SS --> UI: Confirmation message
UI --> Manager: Display updated shift
@enduml
```

Note that this is a basic sequence diagram and the complexity may change based on the project's specifics.