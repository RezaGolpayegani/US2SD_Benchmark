The description is a little vague and it didn't specify the system components and interactions. Therefore, based on typical design patterns, a proposed sequence diagram would include components like the User Interface, the Julia program, a Data Package handler and a Data Storage. Assuming the process involves submitting request, accessing Data Package, loading into Julia and starting the analysis, the code in PlantUML format might look like this:

```PlantUML
@startuml
Researcher -> JuliaUI: Request Data Package
JuliaUI -> DataPackageHandler: LoadDataPackage(Name)
DataPackageHandler -> ExternalDataSource: FetchDataPackage(Name)
ExternalDataSource -> DataPackageHandler: ReturnDataPackage
DataPackageHandler -> JuliaUI: DataLoadedSuccessfully
JuliaUI -> JuliaProgram: PackageLoadedNotification
JuliaProgram -> JuliaUI: StartDataAnalysis
JuliaUI -> Researcher: GetAnalysisStarted
@enduml
```

In the diagram:
- The Researcher interacts with the Julia User Interface (JuliaUI) to request a data package.
- JuliaUI sends a load data package request to the DataPackageHandler.
- DataPackageHandler fetches the data from the ExternalDataSource.
- ExternalDataSource returns the data package to the DataPackageHandler.
- The DataPackageHandler confirms data load success to the JuliaUI.
- JuliaUI then sends a notification to the JuliaProgram that the package has been successfully loaded.
- The JuliaProgram starts data analysis and indicates it to the JuliaUI.
- Finally, JuliaUI lets the researcher know that the analysis has started.

Note: This is quite a generic approach, without knowing the specific architecture and components of your system, you might need to adjust this sequence to fit your needs.