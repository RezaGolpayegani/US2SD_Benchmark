As an AI model, I'm not able to generate visual content. But I can provide you with an example description of a sequence diagram in PlantUML that you can use as a template for your specific project diagram. Furthermore, you can convert the provided text into visual content using PlantUML's online service or another PlantUML renderer.

```
@startuml
User -> Moderator: Request Transcript
activate Moderator
Moderator -> GameEngine: RetrieveGameData(gameId)
activate GameEngine
GameEngine --> Moderator: GameData
deactivate GameEngine
Moderator -> TranscriptService: TranscribeGame(GameData)
activate TranscriptService
TranscriptService --> Moderator : Transcript (in text format)
deactivate TranscriptService
Moderator -> HTMLExporter: ToHTML(Transcript)
activate HTMLExporter
HTMLExporter --> Moderator: Transcript (in HTML format)
deactivate HTMLExporter
Moderator -> User: ReturnHTMLTranscript
deactivate Moderator
@enduml
```

In this case, the flow starts with a user request to the moderator for a transcript. The moderator requests game data from the game engine, which it returns. The moderator then uses a hypothetical service to convert game data into a transcript, the `TranscriptService`.

The `TranscriptService` transcribes the game data and returns the transcript (in text format) to the Moderator. The moderator then uses another service `HTMLExporter` to convert the text into HTML. Finally, this HTML version of the transcript is returned to the user. 

Please replace `User`, `Moderator`, `GameEngine`, `TranscriptService`, `HTMLExporter` with the real component names you're using in your game and add error handling as required. If not all these operations are carried out asynchronically, you might want to consider using synchronous arrows (`-->`) instead.