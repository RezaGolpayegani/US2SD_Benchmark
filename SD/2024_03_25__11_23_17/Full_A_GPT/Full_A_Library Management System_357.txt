We cannot create diagrams in this platform because it only supports text-based answers. However, I can provide a detailed description of a sequence diagram, which you can use as a guideline to draw a diagram in Plant UML.

The sequence diagram will have five objects/lifelines: Staff, Validation System, Database, Notification System, and Book.

1. Start
2. The diagram initiates with a "Staff" object. The process starts when the "Staff" triggers a "SpecifyID()" message to the "Validation System."
3. The "Validation System" triggers a "ValidateID()" message to itself for verifying the uniqueness of the ID. 
4. After validation, "Validation System" sends a message "checkID()" to the "Database" to check if the ID exists.
5. The "Database" returns a "returnID()" message back to the "Validation System", which may be positive (ID exists) or negative (ID doesn't exist).
6. In case of a negative response - which means the ID doesn't exist in the database - the "Validation System" sends a "addID()" message back to the "Database".
7. For a positive response, the “Validation System” sends a "Throw Exception: ID Exists" message back to the "Staff."
8. After adding the ID, the "Database" sends a "confirmID()" message to the "Notification System".
9. Finally, the "Notification System" sends a "notifySuccess()" message to the "Staff".
10. End

Notes:
- To keep the diagram simple, I omitted error handling steps. Depending on your needs, you may want to add more detail about what happens when an error occurs during the ID validation or addition stages.
- I also assumed that the staff's request to specify an ID is automatically allowed. If permission checks are needed, include them in the system.

This high-level description will give you a well-detailed sequence diagram. Create these steps in PlantUML, and you will get the desired sequence diagram.