As a project description, it is not quite detailed to create a sequence diagram. However, I will give a broad interpretation of this user story. 

Let's assume the 'remaining items' here refers to the remaining inventory in a warehouse. Based on this, let's create a scenario wherein the Manager wants to check the remaining items in the warehouse on an online platform. This might interact with three systems: User Interface (UI), Server, and Database. 

The sequence diagram would look like following in PlantUML format:

```java
@startuml
participant "Manager" as M
participant "User Interface" as UI
participant "Server" as S
participant "Database" as D

M -> UI: Request remaining items
activate UI
UI -> S: Forward request
activate S
S -> D: Request item data
activate D
D -->> S: Send item data
deactivate D
S --> UI: Return item data
deactivate S
UI --> M: Display remaining items
deactivate UI
@enduml
```

This sequence diagram shows the flow of actions when a manager requests to view the remaining items. It starts from the manager's request, processed by the UI, passed onto the server, where it interacts with the database to fetch the remaining items data. The data is then forwarded back to the UI and displayed to the Manager.

Please note, for a more accurate sequence diagram, a detailed project description including all the systems involved as well as the interaction among systems is needed.