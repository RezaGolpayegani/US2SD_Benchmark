Here's a textual description of a sequence diagram for this user story. PlantUML code cannot be accurately generated without knowing the specific software architecture and classes involved. Therefore, I'll illustrate a possible sequence here.

1. "Archivist" is our actor here. 
2. The Archivist starts the use case by sending a 'AddRestriction' message to "Archiving System".
3. Archiving System responds to this by sending a 'SelectFile' message to "File".
4. File sends back a 'FileSelected' message back to the Archiving System
5. Transferring the selected file, Archiving System then sends a 'AddRestrictionEndDate' message to "Restriction System".
6. The Restriction System then processes the request and adds the end date to the file. 
7. After the restriction is added it gives confirmation by sending 'Restriction Added'  back to the Archiving System.
8. Finally, the Archiving System verifies and confirms the addition of the restriction end date to the Archivist by showing 'RestrictionEndDateAdded' message.

Though the diagram would help illustrate this better, refer this for more clarity :

Archivist -> Archiving System : AddRestriction
Archiving System -> File: SelectFile
File -> Archiving System : FileSelected
Archiving System -> Restriction System : AddRestrictionEndDate
Restriction System -> ArchivingSystem : RestrictionAdded
ArchivingSystem -> Archivist : RestrictionEndDateAdded

Please note that this is a simplistic high-level overview of the process and depending on the actual technical implementation, it can get more complex. Specific considerations for exception handling and alternative paths are not covered.