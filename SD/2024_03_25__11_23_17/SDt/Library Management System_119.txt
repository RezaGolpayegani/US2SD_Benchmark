@startuml
participant "Library Manager" as A
entity "System" as B
database "Database" as C
entity "Book" as D

A -> B: Access the System to manage books
activate B
B -> C: Fetch list of all books
activate C
C --> B: Return list of all books
deactivate C
B --> A: Display list of all books
deactivate B

A -> B: Request to add new book
activate B
B -> C: Send Request to add new book
activate C
C --> B: Confirm that the book has been added
deactivate C
B --> A: Confirm new book has been added
deactivate B

A -> B: Access System to manage checkouts
activate B
B -> C: Fetch details of all checkouts
activate C
C --> B: Return details of all checkouts
deactivate C
B --> A: Display list of all checkouts
deactivate B

A -> B: Checkout a book to a user
activate B
B -> C: Send request to checkout book
activate C
C --> B: Confirm checkout
deactivate C
B --> A: Confirm checkout to Library Manager
deactivate B

A -> B: Return a book from a user
activate B
B -> C: Send request to return book
activate C
C --> B: Confirm return
deactivate C
B --> A: Confirm return to Library Manager
deactivate B
@enduml