As an AI, I'm unable to provide direct visual illustrations within this text-based platform. However, I can provide you the description of how the sequence diagram in Plant UML would look like:

This diagram would represent the interactions of the different components of the system in Plant UML format. Hereâ€™s a simple guide to help explain how to write the UML for the sequence diagram:

```plantuml
@startuml

"DigitalRecords Archivist" -> "System": Request access for admin
activate "System"
"System" -> "Database": Verify Archivist's Credentials
note right: System checks if the Archivist\nhas necessary permissions to grant\nprivileges to other admins
activate "Database"
"Database" -> "System": Return Verification Status
deactivate "Database" 

alt Verification Successful
    "System" -> "DigitalRecords Archivist": Provide admin list
    activate "DigitalRecords Archivist"
    "DigitalRecords Archivist" -> "System": Select an admin to grant privileges
    deactivate "DigitalRecords Archivist"
    activate "System"
    "System" -> "Database": Grant embargo privileges to selected Admin
    activate "Database"
    "Database" -> "System": Return Success/Fail message
    deactivate "Database"
    "System" -> "DigitalRecords Archivist": Display Success/Fail message
    deactivate "System"
else Verification Failed
    "System" -> "DigitalRecords Archivist": Display error message
    deactivate "System"
end

@enduml
```
This sequence diagram assumes the initial action is taken by a DigitalRecords Archivist. The system then verifies the credentials of the administrator from the database. If the verification is successful, the system provides the list of admins to the Archivist, who can then select a specific admin to grant embargo privileges. The system communicates that operation to the database and then returns a success or failure message to the Archivist. If verification fails, an error message is displayed.

Please note that this script must be run through a Plant UML processor to generate an actual diagram. You can use online editors such as PlantText or desktop applications such as PlantUML QEditor.

Also, this is just a basic sample which may need to be adapted based on the specific system you're dealing with.