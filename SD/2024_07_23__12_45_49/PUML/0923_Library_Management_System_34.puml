@startuml` and features a title describing the scenario being modeled.

2. **Actors and participants**: 
    - **Librarian**: The actor initiating the process. This is the library staff member wishing to check the maintenance dates of the books.
    - **CLMS Interface**: This represents the front-end system through which the librarian interacts with the database. It acts as a participant because it takes part in the exchange.
    - **Book Management Module**: A backend component of the program that processes requests related to book information, including maintenance dates.
    - **Library Database**: The storage system where all data regarding books and their maintenance dates are kept.

3. **Sequence of interactions**:
    - The **Librarian** requests the maintenance dates through the **CLMS Interface**. This could be a click or form submission within the UI.
    - **CLMS Interface** then queries the **Book Management Module** for all book maintenance dates. This shows the start of the backend process.
    - **Book Management Module** executes a `SELECT` operation on the **Library Database** to fetch the requested information.
    - The **Library Database** returns the maintenance dates to the **Book Management Module**.
    - The **Book Management Module** then sends this data back to the **CLMS Interface**.
    - Finally, the **CLMS Interface** displays the maintenance dates to the **Librarian**.

4. **End of the diagram**: The sequence concludes with `@enduml