@startuml
actor Member as member
participant "LMS Frontend\nApp" as frontend
participant "Backend\nServer" as backend
database "Library\nDatabase" as database

member -> frontend : Request book status
activate frontend

frontend -> backend : API call: getBookStatus(bookID)
activate backend

backend -> database : Query: SELECT status FROM books WHERE book_id = ?
activate database

database --> backend : Return book status
deactivate database

backend --> frontend : Return book status (Available/Unavailable)
deactivate backend

frontend --> member : Display book status
deactivate frontend

@enduml