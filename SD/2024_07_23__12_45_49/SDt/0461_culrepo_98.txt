@startuml
!theme plain

participant "Asset Manager" as Manager
participant "Web Interface" as WebUI
participant "Repository Backend" as Backend
participant "Storage Management" as Storage
database "Primary Storage" as Primary
database "Backup Storage" as Backup

== Deposit Digital Copy ==
Manager -> WebUI: Deposit digital copy
WebUI -> Backend: Request to store digital copy
Backend -> Storage: Process storage with redundancy
Storage -> Primary: Store in primary storage
activate Primary
Primary --> Storage: Confirmation
deactivate Primary
Storage -> Backup: Initiate redundant backup
activate Backup
Backup --> Storage: Backup confirmation
deactivate Backup
Storage --> Backend: Storage successful
Backend -> WebUI: Display success message
WebUI -> Manager: Confirm digital copy stored with redundancy

== Retrieve Digital Copy on Damage ==
Manager -> WebUI: Request access to damaged digital copy
WebUI -> Backend: Lookup digital copy
Backend -> Storage: Check primary storage
alt Primary Storage Damaged
  Storage -> Backup: Retrieve from backup
  Backup --> Storage: Return backup copy
  Storage -> Primary: Restore backup copy
  Primary --> Storage: Restoration confirmation
  Storage --> Backend: Provide restored copy
else Primary Storage Intact
  Storage -> Primary: Access digital copy
  Primary --> Storage: Return digital copy
  Storage --> Backend: Provide digital copy
end
Backend -> WebUI: Serve requested digital copy
WebUI -> Manager: Download digital copy

@enduml