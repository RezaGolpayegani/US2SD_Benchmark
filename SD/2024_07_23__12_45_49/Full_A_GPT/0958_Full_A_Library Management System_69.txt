Creating a detailed sequence diagram for the user story: "As a librarian, I want to know which books are on the shelves" involves illustrating the interaction between different system components involved in fulfilling this requirement. Below is a PlantUML code that represents these interactions in a sequence diagram.

```plantuml
@startuml
participant Librarian
participant UI
participant Controller
database LibraryDB

Librarian -> UI: Access book inventory section
UI -> Controller: Request book list
Controller -> LibraryDB: Query all books on shelves
LibraryDB -> Controller: Return book list
Controller -> UI: Display book list
UI -> Librarian: Shows list of books on shelves

@enduml
```

Explanation of the Diagram:

1. **Librarian**: Initiates the process by accessing the book inventory section, which is designed to show which books are currently available on the shelves.

2. **UI (User Interface)**: The interface through which the librarian interacts with the system. Upon receiving the request to see the available books, it forwards this request to the Controller to process it.

3. **Controller**: Acts as an intermediary between the UI and the database. It receives the request to fetch the list of books that are on the shelves.

4. **LibraryDB (Library Database)**: This is where all the data concerning the library's inventory is stored. It responds to the query from the Controller with the list of books currently available on the shelves.

5. **Data Flow**: The diagram illustrates how the request flows from the Librarian to the UI, then to the Controller, and finally to the LibraryDB. After fetching the required data (list of books on the shelves), the information flows back through the Controller and UI, eventually being displayed to the Librarian.

This sequence diagram provides a simplified view of the interactions involved in retrieving and displaying the list of books available on the shelves to a librarian using the Comprehensive Library Management System (CLMS).