Creating a detailed sequence diagram for the specific user story involving restricting access to a collection or items to certain IP addresses involves several actors and components. The process entails interacting with the user interface, processing the request, updating data access rules, and ensuring that only requests from specified IP addresses can access the restricted content.

Below is a PlantUML code snippet that outlines a possible sequence diagram for this user story:

```plantuml
@startuml
actor Curator as curator
participant "UI Dashboard" as dashboard
participant "Authentication Service" as auth
participant "Access Control Module" as acm
participant "Repository Database" as db
participant "Networking Service" as net

curator -> dashboard : Initiate restriction settings
activate dashboard

dashboard -> auth : Authenticate curator
activate auth
auth -->> dashboard : Authentication successful
deactivate auth

dashboard -> acm : Request to restrict access
activate acm
acm -> db : Fetch collection details
activate db
db -->> acm : Collection information
deactivate db

acm -> acm : Define IP restriction rule\n(Duke IP addresses only)
acm -> db : Update collection with access rule
activate db
db -->> acm : Update confirmation
deactivate db

acm -->> dashboard : Restriction applied
deactivate acm

dashboard -->> curator : Display success message
deactivate dashboard

curator -> net : User tries to access collection
activate net
net -> acm : Check access for user IP
activate acm
acm -> acm : Validate IP against rule
acm -->> net : Access granted/denied based on IP
deactivate acm
net -> net : Serve/deny collection based on ACM decision

@enduml
```

This diagram walks through the steps a collection curator would take to restrict access to their collection to only Duke IP addresses through the system's interface. It includes the key components involved in this process:

- **Curator**: Initiates the process to restrict access through the system's user interface.
- **UI Dashboard**: The front-end interface where the curator makes the access control request.
- **Authentication Service**: Authenticates the curator to ensure they have the necessary permissions to make changes.
- **Access Control Module (ACM)**: Processes the request, interacts with the repository database to update the collection's access rules, and checks user access based on IP addresses.
- **Repository Database**: Stores details about collections, including access rules.
- **Networking Service**: Manages incoming user requests and applies the access rules before serving the content.

This diagram illustrates a high-level overview of the process and can be expanded or modified based on the specific implementations and technology choices made during the project development.