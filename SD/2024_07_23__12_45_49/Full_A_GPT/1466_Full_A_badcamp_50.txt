To create a detailed sequence diagram for the given user story in PlantUML, we first need to outline the interactions between the different actors and components involved in the "Link to my sponsorship profile from my job listings" feature. Let's break down the process.

1. **Sponsor logs in**: The sponsor must be authenticated to link job listings to their sponsorship profile.
2. **Navigate to Job Listings**: The sponsor accesses the job listings section.
3. **Add/Edit Job Listing**: The sponsor decides to add a new listing or edit an existing one.
4. **Link to Sponsorship Profile**: In the job listing form, the sponsor has the option to link to their sponsorship profile.
5. **Submit Job Listing**: After filling in the details and linking to the sponsorship profile, the sponsor submits the job listing for approval or publishing.
6. **Job Listing Processed**: The system processes the request. This might involve some backend validation and perhaps an approval step by an administrator.
7. **Publication and Display**: Once approved, the job listing is published with a link to the sponsor's profile.

Let's translate this into a PlantUML sequence diagram notation:

```plantuml
@startuml
actor Sponsor
entity "Authentication System" as Auth
entity "Job Listing Service" as JobService
entity "Sponsorship Profile Service" as SponsorProfile
database "Database" as DB

Sponsor->Auth: Log In
activate Auth
Auth-->Sponsor: Authentication Success
deactivate Auth

Sponsor->JobService: Navigate to Job Listings
activate JobService

Sponsor->JobService: Add/Edit Job Listing
activate JobService
JobService->Sponsor: Display Job Listing Form

Sponsor->SponsorProfile: Select Link to Sponsorship Profile
activate SponsorProfile
SponsorProfile->JobService: Provide Link

Sponsor->JobService: Submit Job Listing with Profile Link
JobService->DB: Save/Update Job Listing
activate DB
DB-->JobService: Confirmation
deactivate DB

JobService-->Sponsor: Display Success Message

deactivate SponsorProfile
deactivate JobService

@enduml
```

This sequence diagram illustrates the interactions from the perspective of the sponsor who wants to link their sponsorship profile with their job listings. 

Keep in mind, the above PlantUML code is a simplified view that assumes successful operations and interactions without delving into error handling or the detailed internals of each system (like the authentication mechanism, the exact data validation process in the backend, or administrative approval flows). Depending on the complexity of your application and the level of detail you require, you might need to expand this with additional steps or systems interactions.