Creating a detailed sequence diagram for the given user story involves illustrating the interaction between different system components or objects to fulfill the request of a management user who wants to see orders that have received complaints about delivery and time. Below is a simplified sequence diagram in Plant UML format. Keep in mind that in a real-world application, the interactions might be more complex and involve additional layers of logic, error handling, and security measures.

```plantuml
@startuml

participant ManagementUser as MU
participant WebInterface as WI
participant Server as S
database Database as DB

MU -> WI: Request to view orders with delivery time complaints
WI -> S: Fetch orders with complaints on delivery time
S -> DB: Query for orders with delivery complaints
DB --> S: Return orders
S --> WI: Display orders with delivery time complaints
WI --> MU: Show orders with complaints

@enduml
```

This sequence diagram follows these steps:

1. **Management User Request**: The management user (MU) initiates the process by requesting to view orders that have complaints specifically regarding delivery time, through the Web Interface (WI).

2. **Fetch Request**: The Web Interface, upon receiving the request from the management user, communicates with the Server (S), asking it to fetch the relevant orders.

3. **Database Query**: The Server then sends a query to the Database (DB) to retrieve orders that have been marked with complaints about delivery time.

4. **Return Orders**: The Database processes the query and returns the list of orders that match the criteria (i.e., those with delivery time complaints) back to the Server.

5. **Display Orders**: The Server, after receiving the data from the Database, sends it back to the Web Interface, which then formats and displays the information to the management user.

6. **User Views Information**: The Management User views the orders which have received complaints about delivery time, likely including details such as order ID, complaint details, and possibly options to drill down into each order for more information.

This diagram outlines a straightforward process flow and can be expanded to include additional details such as error handling, specific data fields, and alternative flows depending on the requirements and the complexity of the system being designed.