To visualize the user story of a Cornell faculty member wanting to log in remotely to the repository using Shibboleth for accessing campus-only content, hereâ€™s a detailed Plant UML sequence diagram that outlines the interactions among the system components involved in this process. This sequence diagram assumes the existence of a user interface for the repository, a Shibboleth Identity Provider (IdP) for authentication, and the repository system that manages content access control.

```plantuml
@startuml
actor FacultyMember as FM
participant "Repository UI" as UI
participant "Shibboleth IdP" as IDP
participant "Repository Backend" as RB

== Authentication Process ==
FM -> UI : Navigate to Login Page
UI -> FM : Display Login Options
FM -> UI : Select Shibboleth Login
UI -> IDP : Redirect to Shibboleth IdP
IDP -> FM : Request Credentials
FM -> IDP : Provide Credentials
IDP -> UI : Authenticate and Redirect with Token
UI -> RB : Validate Token
RB -> UI : Authentication Confirmation

== Content Access ==
UI -> FM : Display Remote Access Content Options
FM -> UI : Request Campus-Only Content
UI -> RB : Check Access Permissions
RB -> UI : Grant Access to Requested Content
UI -> FM : Display Campus-Only Content

@enduml
```

This sequence diagram starts with the faculty member navigating to the login page of the digital repository. The steps are as follows:

1. **Faculty Member Initiates Login:** The faculty member navigates to the repository's login page and selects the option to login via Shibboleth, an open-source identity provider commonly used in academic institutions for single sign-on (SSO).

2. **Redirect to Shibboleth IdP for Authentication:** The repository UI redirects the faculty member to the Shibboleth Identity Provider (IdP) login page.

3. **Faculty Member Provides Credentials:** The faculty member enters their credentials, which the Shibboleth IdP verifies.

4. **Authentication and Redirect:** Once authenticated, Shibboleth IdP sends a response back to the repository UI along with a session token or assertion indicating successful authentication.

5. **Repository Backend Validates Token:** The repository UI forwards the token to the repository backend to validate the session token and establish the user's session.

6. **Access to Campus-Only Content:** Post-authentication, the faculty member is presented with options to access campus-only content. Upon selecting, the repository backend checks the access permissions and, once verified, grants access to the requested content.

7. **Content Delivery:** Finally, the faculty member is presented with the campus-only content they requested, completing the remote access process.

This sequence diagram abstractly represents the interactions and simplifies the detailed exchanges that might happen under the hood, especially concerning security and data exchange protocols used by Shibboleth for authentication and session management.