Given the complexity and the detail required for creating a sequence diagram for the user story: "As a library member, I want to sort & filter my search results, so that I can refine my selection", I'll provide a basic PlantUML code to illustrate a possible interaction for this feature in the context of the Comprehensive Library Management System (CLMS). Note, this is a high-level representation and might not cover all possible interactions or system components in depth.

```plantuml
@startuml

participant "LibraryMember" as member
participant "WebInterface" as web
participant "SearchController" as controller
participant "Database" as db

member -> web: Enter search query
web -> controller: Initiate search(query)
controller -> db: Fetch results based on query
db -> controller: Return initial results
controller -> web: Display initial results
member -> web: Select filters and sort criteria
web -> controller: Apply filters and sort(criteria)
controller -> db: Fetch refined results(criteria)
db -> controller: Return refined results
controller -> web: Display refined results
web -> member: Show final refined and sorted results

@enduml
```

### Explanation

1. **LibraryMember** initiates the process by entering a search query through the **WebInterface**. This could be a search based on book title, author, or subject category.

2. The **WebInterface** sends the query to the **SearchController**, which is responsible for processing search requests.

3. **SearchController** asks the **Database** to fetch results based on the initial query. The database returns the initial set of results that match the query parameters.

4. These initial results are sent back from the **SearchController** to the **WebInterface** and displayed to the **LibraryMember**.

5. The **LibraryMember** decides to refine the search results and selects specific filters (e.g., publication year, genre) and a sort criterion (e.g., by popularity, by publication date) through the **WebInterface**.

6. **WebInterface** communicates these filters and sort criteria back to the **SearchController**.

7. **SearchController** then requests the **Database** to fetch results again, this time taking the specified filters and sort criteria into account.

8. The **Database** executes this more refined search and returns the results to the **SearchController**.

9. **SearchController** sends these refined and sorted results back to the **WebInterface**, which displays them to the **LibraryMember**.

10. The **LibraryMember** now views the final set of refined and sorted search results.

This sequence effectively demonstrates how a library member can refine and sort search results within the CLMS, allowing for a more tailored and efficient search experience. Adjustments might be needed based on specific technical implementations and additional features of the system.