To generate a detailed PlantUML sequence diagram for the specified user story where an archivist wants to create and edit Agent records, we're going to outline the interactions among different components of the Comprehensive Archival Management System (CAMS). Please note that for brevity and clarity, some simplifications are made.

This sequence involves the Archivist, the System Interface (the GUI or web interface of CAMS), and the Backend System (which handles data processing and storage).

```plantuml
@startuml
!theme cerulean

participant Archivist
participant "System Interface" as Interface
database "Backend System" as Backend

== Create Agent Record ==
Archivist -> Interface : select "Create Agent"
Interface -> Backend : requestEmptyAgentTemplate()
activate Backend
Backend -> Backend : generateEmptyAgentTemplate()
Backend -> Interface : returnEmptyAgentTemplate()
deactivate Backend
activate Interface
Interface -> Archivist : displayEmptyAgentForm()
deactivate Interface
Archivist -> Interface : fillAgentForm(data)
activate Interface
Interface -> Backend : createAgent(data)
activate Backend
Backend -> Backend : validateData(data)
Backend -> Backend : saveNewAgent(data)
Backend --> Interface : confirmCreation()
deactivate Backend
Interface -> Archivist : displayConfirmation()
deactivate Interface

== Edit Agent Record ==
Archivist -> Interface : requestAgentEdit(agentId)
activate Interface
Interface -> Backend : getAgentDetails(agentId)
activate Backend
Backend -> Backend : retrieveAgentData(agentId)
Backend --> Interface : returnAgentData()
deactivate Backend
Interface -> Archivist : displayAgentForm(data)
deactivate Interface
Archivist -> Interface : submitEditedAgent(editedData)
activate Interface
Interface -> Backend : updateAgent(agentId, editedData)
activate Backend
Backend -> Backend : validateEditedData(editedData)
Backend -> Backend : saveEditedAgent(agentId, editedData)
Backend --> Interface : confirmUpdate()
deactivate Backend
Interface -> Archivist : displayUpdateConfirmation()
deactivate Interface

@enduml
```

This PlantUML sequence diagram outlines the steps and interactions for creating and editing Agent records. The archivist interacts with the System Interface to initiate actions. For creating an agent, the system provides an empty template form, which the archivist fills out and submits. The Backend System then validates and saves the new Agent record, returning a confirmation to the user through the interface. Similarly, for editing, the archivist requests an Agent record to edit, the system retrieves and displays it, the Archivist submits changes, and the backend validates, saves, and confirms the updated record.

Remember, this is a simplified overview for the specific user story of creating and editing Agent records in a comprehensive archival management system. Actual implementation details may vary based on specific project requirements, technology stack, and system architecture.