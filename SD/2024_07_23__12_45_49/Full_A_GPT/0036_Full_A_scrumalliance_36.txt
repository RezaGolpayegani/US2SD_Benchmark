Creating a detailed sequence diagram for the user story "As a site visitor, I want to subscribe to an RSS feed of upcoming courses and events, so that I am up to date without having to visit the site," using PlantUML involves illustrating the interactions between the user (site visitor) and the system components required to fulfill this action.

Below is the PlantUML code that depicts the sequence diagram for this user story:

```plantuml
@startuml
participant Visitor as V
participant "Web Interface" as WI
participant "Subscription Service" as SS
participant "Courses & Events System" as CES
participant "RSS Feed Generator" as RFG
participant "Database" as DB

V->WI: Access RSS Feed Subscription Page
activate WI
WI->SS: Request Subscription Form
activate SS
SS->WI: Return Subscription Form
WI->V: Display Subscription Form
deactivate SS

V->WI: Submit email & preferences
WI->SS: Process Subscription Request(email, preferences)
activate SS
SS->DB: Check if email already subscribed
activate DB
DB->SS: Return check result
deactivate DB

alt If email not subscribed
    SS->DB: Save subscription details
    activate DB
    DB->SS: Confirm subscription saved
    deactivate DB
    SS->CES: Retrieve upcoming courses & events based on preferences
    activate CES
    CES->DB: Query upcoming courses & events
    activate DB
    DB->CES: Return courses & events data
    deactivate DB
    CES->RFG: Generate RSS Feed
    activate RSC
    RFG->CES: Return RSS Feed URL
    deactivate RSC
    CES->SS: Send RSS Feed URL
    deactivate CES
    SS->WI: Send confirmation with RSS Feed URL
    WI->V: Display confirmation with RSS Feed URL
else If email already subscribed
    SS->WI: Inform already subscribed
    WI->V: Display already subscribed message
end

deactivate SS
@enduml
```

This PlantUML sequence diagram starts with the site visitor accessing the RSS Feed Subscription page on the web interface. They request to subscribe by submitting their email and preferences. The Subscription Service processes this request, first checking if the email is already subscribed. If not, it saves the new subscription details and, based on the subscriber's preferences, retrieves upcoming courses and events. The Courses & Events System queries the database for this information and then asks the RSS Feed Generator to generate a relevant feed. This feed URL is sent back through the system to the web interface, which presents it to the visitor along with a confirmation message. If the email was already subscribed, the visitor is informed accordingly.

This diagram is a high-level representation. Depending on the actual system architecture and requirements, additional details and steps could be added, such as error handling mechanisms, more detailed interaction with the database, or interactions with an authentication system if subscriptions require user accounts.