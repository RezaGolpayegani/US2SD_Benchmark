Creating a detailed sequence diagram for the described User Story involves various components and actors of the Restaurant Management and Operations System. Below is a PlantUML code snippet that illustrates the sequence of interactions from a waiter wanting to display order status for each order item to informing the customers.

```plantuml
@startuml
actor Waiter
participant "Waiter Interface" as WI
participant "Order Management System" as OMS
participant "Database" as DB

== Display Order Status for Each Order Item ==

Waiter -> WI: Select "View Order Status"
activate WI
WI -> OMS: Request current order statuses
activate OMS

OMS -> DB: Query order items and their statuses
activate DB
DB --> OMS: Order items and statuses
deactivate DB

OMS --> WI: Display order items with statuses
deactivate OMS

WI --> Waiter: Show order status info
deactivate WI

== Inform Customers ==

Waiter -> Waiter: Inform customers about order status
@enduml
```

### Explanation of the Sequence Diagram
- **Waiter**: Initiates the process by selecting to view the order status from their interface.
- **Waiter Interface (WI)**: Acts as the front-end component where the waiter interacts to trigger the status check and view results.
- **Order Management System (OMS)**: It's the backend system that handles business logic related to orders. It receives a request from the WI to fetch the current status of each order item.
- **Database (DB)**: Stores all persistent data, including orders and their statuses. OMS queries the DB to retrieve this information.
- **Informing Customers**: Once the waiter views the order statuses on the Waiter Interface, they directly inform the customers about the status of their order, completing the user story's objective.

This sequence diagram focuses on the logical interaction flow required to achieve the waiter's goal of displaying and then informing the customers about the order status as outlined in the user story. Adjustments might be needed based on specific project details or requirements.