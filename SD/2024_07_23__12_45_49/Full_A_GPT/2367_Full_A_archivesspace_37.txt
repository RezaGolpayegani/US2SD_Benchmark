Creating a detailed PlantUML sequence diagram for the user story "As an Archivist, I want to create and edit Event records" involves illustrating the interaction between the Archivist (user), the UI (User Interface of the Comprehensive Archival Management System, CAMS), and the underlying system components. Let's break down this user story into a sequence of actions to represent it in PlantUML format. 

### Sequence Diagram in PlantUML

```plantuml
@startuml
actor Archivist as arch
participant "UI: Event Management" as ui
database "CAMS Backend" as backend

== Create Event Record ==
arch -> ui : Selects "Create New Event"
ui -> backend : Request to initialize new Event record
activate backend
backend --> ui : Respond with new Event form
deactivate backend
ui --> arch : Display new Event form
arch -> ui : Fills in Event details and selects "Save"
ui -> backend : Submit new Event details
activate backend
backend -> backend : Validates and saves Event details
backend --> ui : Confirmation of Event creation
ui --> arch : Display confirmation message

== Edit Event Record ==
arch -> ui : Requests to edit an Event
ui -> backend : Fetch Event details
activate backend
backend --> ui : Return Event details
deactivate backend
ui --> arch : Display Event details
arch -> ui : Updates Event information and selects "Save"
ui -> backend : Submit updated Event details
activate backend
backend -> backend : Validates and updates Event details
backend --> ui : Confirmation of Event update
ui --> arch : Display update confirmation message
deactivate backend

@enduml
```

### Explanation:
- **Archivist (actor)**: Initiates actions, such as creating or editing Event records.
- **UI: Event Management (participant)**: The interface where the Archivist interacts with the system to manage Event records.
- **CAMS Backend (database/system)**: Saves, retrieves, and manages the data of event records.

### Process Flow for Creating an Event Record:
1. The Archivist selects the option to create a new Event record.
2. The system displays a form for the new Event.
3. The Archivist fills in the details and submits the form.
4. The backend validates and saves the new Event details.
5. The Archivist receives a confirmation message that the Event record has been created.

### Process Flow for Editing an Event Record:
1. The Archivist selects an existing Event record to edit.
2. The system fetches and displays the details of the selected Event.
3. The Archivist updates the information as needed and submits the changes.
4. The backend validates and updates the Event details.
5. The Archivist receives a confirmation message that the Event record has been updated.

This sequence diagram visually represents the steps involved for an Archivist to create and edit Event records within the Comprehensive Archival Management System Enhancement project, emphasizing the interactions between the user and system components.