Creating a detailed sequence diagram for the user story, "As a system, I want to know details about which books are located in the specified shelf," involves outlining the interaction between the user, system components, and the database to fulfill the request. This example assumes a simplified flow where a user interacts with the CLMS via a UI, the request is processed by a back-end server, and data is retrieved from a database.

Given the scope of this platform, I'll provide you with a PlantUML sequence diagram focused on this scenario. Please note, to visualize this PlantUML code, you'll need to use a PlantUML editor or an online PlantUML tool like planttext.com.

```plantuml
@startuml
!theme plain

actor User as user
participant "UI" as ui
participant "Library System\nBackend" as backend
database "Library Database" as db

user -> ui : Selects shelf and requests book details
ui -> backend : GET /books/shelf/:id
backend -> db : SELECT * FROM books\nWHERE shelf_id = :id
db -> backend : Return book details
backend -> ui : Display book details
ui -> user : Shows book details

@enduml
```

### Explanation:

1. **User to UI**: The user interaction starts by selecting a specific shelf (perhaps through a dropdown or search box) and requests details for the books located on that shelf.

2. **UI to Backend**: The UI sends this request to the backend server, ideally through a RESTful API call (`GET /books/shelf/:id`), where `:id` is the shelf identifier.

3. **Backend to Database**: The backend, upon receiving the request, formulates a database query to fetch all books that are stored on the specified shelf (`SELECT * FROM books WHERE shelf_id = :id`).

4. **Database to Backend**: The database returns the details of the books found on that shelf to the backend. This could include information like book titles, authors, ISBNs, and availability status.

5. **Backend to UI**: The backend then sends this information back to the UI, which prepares it for display.

6. **UI to User**: Finally, the user is shown the details of the books located on the selected shelf, completing the request.

This diagram is simplified and assumes a direct sequence of actions. Adjustments might be needed based on specific project requirements, such as error handling (e.g., if no books are found on the shelf) or additional steps (e.g., authentication or authorization if needed before making such queries).