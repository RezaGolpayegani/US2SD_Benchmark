To create a detailed sequence diagram in PlantUML format for the user story: "As a manager, I want to display employee data so that I can display their arrival time," we need to consider the interactions between different components of the Restaurant Management and Operations System described in the overview. Below is a sequence diagram that outlines the process from the manager initiating the request to display employee data, especially focusing on their arrival times.

```plantuml
@startuml

participant Manager as M
participant "Management Dashboard" as MD
participant "Server API" as API
participant "Database" as DB

title Display Employee Arrival Time Sequence

M -> MD : Selects "Employee Data"
activate MD
MD -> API : GET /employee/arrival-times
activate API
API -> DB : Query Employee Arrival Times
activate DB
DB --> API : Employee Arrival Times Data
deactivate DB
API --> MD : Response with Data
deactivate API
MD --> M : Display Employee Arrival Times
deactivate MD

@enduml
```

**Explanation of the Sequence:**

1. **Manager (M)**: The manager initiates the action by selecting "Employee Data" from the Management Dashboard to view employee arrival times.
2. **Management Dashboard (MD)**: Acts as the front-end interface where the manager interacts. It sends a request to the server API to fetch the required data.
3. **Server API (API)**: This component processes the request from the Management Dashboard. It communicates with the Database to retrieve the specified data.
4. **Database (DB)**: The central repository where all employee data, including their arrival times, is stored. On request, it queries and returns the relevant data back to the Server API.
5. **Data Flow**: The sequence diagram shows how the data flows from the database back to the Management Dashboard and is finally displayed to the manager.

This plantUML diagram provides a high-level overview of the data retrieval process focusing on the arrival times of restaurant employees as desired by the manager. This modeling ensures clarity in the system's operation and interaction between different modules for this specific user story.