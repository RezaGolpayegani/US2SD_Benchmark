Below is a PlantUML code snippet to visualize a sequence diagram for the user story specified. It demonstrates the process from the point of view of a Cornell faculty member wanting to control the sorting of items within their collection in the digital repository system.

```plantuml
@startuml
actor FacultyMember as "Cornell Faculty Member"
participant WebInterface as "Repository Web Interface"
participant ControlPanel as "Collection Control Panel"
participant SortFunction as "Sorting Functionality"
participant Database as "Repository Database"

== Control Sorting of Collection Items ==

FacultyMember -> WebInterface: Accesses Collection Management
WebInterface --> FacultyMember: Presents Collection Management Dashboard

FacultyMember -> ControlPanel: Navigate to "Sort Collection Items"
ControlPanel --> FacultyMember: Shows current sorting options and items

FacultyMember -> ControlPanel: Specifies new sorting criteria
ControlPanel -> SortFunction: Requests update to sorting logic

SortFunction -> Database: Fetches collection items
Database --> SortFunction: Returns items

SortFunction -> Database: Applies new sorting criteria and updates collection
Database --> SortFunction: Confirms items re-ordered

SortFunction --> ControlPanel: Confirms new sorting applied
ControlPanel --> FacultyMember: Displays collection with new sorting

@enduml
```

### Explanation:

1. **Cornell Faculty Member accesses the Repository Web Interface:** The faculty member starts by logging into the digital repository's web interface to manage their collections.

2. **Presents Collection Management Dashboard:** The web interface provides the faculty member with a dashboard where they can manage their collection contents.

3. **Navigating to Collection Control Panel:** The faculty member selects the option to sort their collection items, prompting the system to display the current sorting settings.

4. **Specifying New Sorting Criteria:** The faculty member inputs their desired criteria for how the items should be sorted within their collection.

5. **Sorting Functionality Processes Request:** The request to update the sorting logic is sent to the sorting functionality, which fetches the current items from the database.

6. **Updating Collection in Database:** The sorting functionality applies the new sorting criteria and updates the order of items in the repository database.

7. **Confirmation of New Sorting:** Once the database confirms the reordering, the sorting functionality notifies the control panel, which in turn informs the faculty member that their collection has been updated according to the new sorting preference.

This sequence diagram outlines the steps involved from the faculty member's decision to adjust the sorting of their collection content to the completion of this action, ensuring control over the presentation of their work within the digital repository system.