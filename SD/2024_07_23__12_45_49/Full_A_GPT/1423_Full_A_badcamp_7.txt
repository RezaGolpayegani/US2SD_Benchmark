Creating a detailed sequence diagram in PlantUML format for the user story mentioned involves representing the interaction between various components of the system for a Training Coordinator tracking the registration status of each attendee. The diagram below illustrates this interaction step-by-step.

```plantuml
@startuml
actor "Training Coordinator" as TC
participant ":Web Interface" as UI
database "Database" as DB

TC -> UI : Access Admin View
activate UI

UI -> DB : Retrieve Attendee Data
activate DB

DB --> UI : Attendee Registration Status
deactivate DB

UI --> TC : Display Attendee Status (Attended, Refunded, No-Show)
deactivate UI

note right of TC : Training Coordinator can \nfilter and sort attendee \nstatus for better management.

@enduml
```

### Breakdown of the Sequence Diagram:

- **Training Coordinator**: The actor who wants to check the registration status of each attendee for training sessions.
- **:Web Interface**: Represents the system's front-end through which the Training Coordinator interacts.
- **Database**: The backend storage that holds attendee data, including their registration status.

### Steps Illustrated in the Diagram:

1. **Access Admin View**: The Training Coordinator accesses the admin view via the platform's web interface to manage and track attendee registration status.
2. **Retrieve Attendee Data**: The web interface fetches attendee data, including their registration status, from the database.
3. **Display Attendee Status**: The web interface then displays the status of each attendee (whether they attended, were refunded, or were a no-show) to the Training Coordinator. This allows for efficient tracking and management of attendee statuses.

### Additional Notes:

- The diagram focuses on showcasing the interaction necessary for tracking attendee registration status as specified in the user story.
- Complex system operations, security checks, or error handling procedures are abstracted for clarity and simplicity.
- Implementers can expand upon this basic framework to include additional interactions, such as filtering and sorting functionalities, based on the full requirements of the BADCamp Project.

This sequence diagram provides a clear visualization of the processes involved in allowing a Training Coordinator to track the registration status of attendees, ensuring efficient management and coordination of training sessions.