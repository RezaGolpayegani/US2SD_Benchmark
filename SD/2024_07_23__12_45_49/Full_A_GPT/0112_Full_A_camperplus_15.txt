Given the user story and the features of the Camp Management & Communication Platform as described, here's a PlantUML sequence diagram to illustrate the interaction flow for storing campers' emergency information in the database as anticipated by a camp administrator. This sequence aims to demonstrate how the camp administrator interacts with the system and how the system, in turn, processes that information.

```plantuml
@startuml
participant Administrator as Admin
participant "Camp Management Platform" as CMP
participant Database

== Store Camper's Emergency Information ==

Admin->CMP: Access camper management section
CMP->CMP: Display camper management dashboard

note over Admin, CMP: Admin selects a camper to add or update emergency information.

Admin->CMP: Select "Add/Update Emergency Information"
CMP->Database: Retrieve existing information [If available]

alt Information exists
    CMP->Admin: Display existing emergency information
    Admin->CMP: Update necessary fields
else No existing information
    Admin->CMP: Inputs emergency contact details
end

Admin->CMP: Submit updated information
CMP->Database: Store/Update emergency information
Database-->CMP: Confirmation of storage
CMP->Admin: Display confirmation message

@enduml
```

Explanation of the Diagram:

1. **Administrator Interaction**: The camp administrator accesses the camper management section of the Camp Management & Communication Platform.
2. **Dashboard Display**: The platform displays the camper management dashboard where administrators can manage camper profiles.
3. **Selecting to Add/Update Information**: The administrator selects the option to add or update emergency information for a camper.
4. **Retrieval and Display of Information**: The platform checks if there's existing emergency information in the database and displays it to the administrator.
5. **Inputting Emergency Information**:
   - If there's existing information, the administrator can update the necessary fields.
   - If there's no existing information, the administrator inputs the new emergency contact details.
6. **Submission and Storage**: The administrator submits the updated information, and the platform stores or updates this information in the database.
7. **Confirmation**: The database sends a confirmation back to the platform, which then displays a confirmation message to the administrator.

This sequence diagram assumes basic flow without error handling for clarity. In a real implementation, additional steps to handle errors, validate information, and securely authenticate the administrator should be considered.