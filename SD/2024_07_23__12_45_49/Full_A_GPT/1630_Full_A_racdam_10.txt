To represent the user story as a sequence diagram in PlantUML format, we need to outline the interaction between different system components when an archivist wants to restrict access to certain files based on user roles (e.g., allowing only donor representatives to see certain files). The following PlantUML code is a detailed sequence diagram depicting this process.

```plantuml
@startuml
participant Archivist as archivist
participant "User Management \nSystem" as UserMgmt
participant "File Management \nSystem" as FileMgmt
participant Database as DB

== Restrict Access to Files ==
archivist -> UserMgmt : Authenticate
activate UserMgmt
UserMgmt --> archivist : Authentication Success
deactivate UserMgmt

archivist -> FileMgmt : Select Files to Restrict
activate FileMgmt
FileMgmt -> DB : Fetch File Metadata
activate DB
DB --> FileMgmt : File Metadata
deactivate DB

FileMgmt --> archivist : Display File Metadata
archivist -> FileMgmt : Apply Access Restrictions\n(Role: Donor Representatives)
FileMgmt -> DB : Update File Access Settings
activate DB
DB --> FileMgmt : Confirmation
deactivate DB

FileMgmt --> archivist : Restriction Applied Confirmation
deactivate FileMgmt

== End ==
@enduml
```

Explanation of the Diagram:
- The diagram starts with the **Archivist** authenticating with the **User Management System** to ensure that only authorized personnel can change file access settings.
- Once authenticated, the archivist selects the files to restrict through the **File Management System**.
- The **File Management System** fetches the metadata of the selected files from the **Database**.
- The archivist applies access restrictions specifying that only donor representatives can view the files.
- The **File Management System** updates these access settings in the **Database**.
- A confirmation of the restriction application is sent back to the archivist.

This sequence diagram represents a simplified overview of the process based on the provided user story. Depending on the complexity of your systems and requirements, more details or steps may need to be added, such as handling errors, logging, or interaction with other systems for notifications.