Given the complexity of the Advanced Media Identification & Discovery Platform (AMIDP) and the specific user story focusing on uploading tagged videos and making these tags available for further processing, below is a detailed PlantUML sequence diagram outline. This sequence diagram is structured to capture the interactions between the user, the platform's UI, backend services, and storage systems required to implement this feature.

Please note, the specific commands and API methods are hypothetical and serve to illustrate how the interaction could occur based on common practices in software development. You might need to adjust the diagram according to your actual system design and architecture.

```plantuml
@startuml
!theme plain

participant User as user
participant "UI" as ui
participant "API Gateway" as api
participant "Video Upload Service" as upload
participant "Tagging Service" as tagging
participant "Database" as db
participant "Search Index" as search

user -> ui : Selects video and tags for upload
ui -> api : POST /videos/upload (video, tags)
api -> upload : Validate video and extract metadata
upload -> tagging : Extract tags
tagging -> db : Store tags associated with video ID
db -> search : Update search index with new tags
search --> tagging : Confirm index updated
tagging --> upload : Tags processed and stored
upload -> db : Store video metadata and reference to tags
db --> upload : Confirm video and tags stored
upload --> api : Return success response
api --> ui : Display upload success message
ui --> user : Show confirmation and make tags available for further processing

@enduml
```

This diagram breaks down the process into discrete steps, starting with the user's action of uploading a video along with its associated tags through the user interface. It then flows through the system's backend, detailing the internal services interactions like video validation, metadata extraction, tag processing, storing these entities in a database, updating the search index, and finally notifying the user of the successful upload. 

The "Tagging Service" processes the upload's associated tags, ensuring they are stored for later use and updated in the search index to make the video and its tags readily discoverable across the AMIDP. This illustrates a cohesive flow that would allow for tags to be available for all further processing steps as required by the user story. 

Remember, sequence diagrams in PlantUML can be deeply customized for your specific system architecture needs, and what's provided here is a framework to get you started based on the AMIDP project description.