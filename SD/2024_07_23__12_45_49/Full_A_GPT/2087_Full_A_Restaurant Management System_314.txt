Creating a detailed sequence diagram for the specific user story "As a waiter, I want to update the quantity of ordered items" involves illustrating the sequence of events and interactions between the system components, from the waiter's action to update item quantities in an order, to the database update reflecting this change. Below is a representation of this process in PlantUML format. This script outlines the interactions between the waiter (user), the front-end UI, the server-side application, and the database.

```plantuml
@startuml
actor Waiter
participant "UI (Waiter Interface)" as UI
participant "Backend Server" as Server
database "Database" as DB

Waiter -> UI: Selects order to update
UI -> Server: Request to fetch order details
Server -> DB: Retrieve order details
DB --> Server: Order details
Server --> UI: Display order details
Waiter -> UI: Inputs new quantities for items
UI -> Server: Submit update for item quantities in order
activate Server
    Server -> DB: Update quantities for order items
    activate DB
    DB --> Server: Confirm update success
    deactivate DB
Server --> UI: Update confirmation to Waiter
deactivate Server
UI --> Waiter: Show update success message
@enduml
```

This sequence begins with the waiter selecting an order to update, which prompts a sequence of events where the system fetches and displays the order details. Following this, the waiter inputs new quantities for certain items. These updates are then sent to the backend server, which interacts with the database to update the order items' quantities. Upon successful update, the system confirms this back to the waiter through the UI.

This diagram assumes a typical web application architecture involving a front-end UI, a backend server, and a database. Adjustments may be needed based on the specific technologies or additional requirements of your project.