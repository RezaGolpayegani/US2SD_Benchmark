For creating a detailed sequence diagram in PlantUML format to represent the user story of viewing group's shared calendars via the Neurohub Node's webpage and on a mobile device, we first need to outline the key interactions between entities such as the user, web interface, authentication system, calendar service, and the mobile app. Below is a simplified PlantUML code to illustrate these interactions.

```plantuml
@startuml
participant User as user
participant "Web Interface" as web
participant "Authentication System" as auth
participant "Calendar Service" as cal_service
participant "Mobile App" as mobile_app

user -> web: Access calendar via web
activate web

web -> auth: Request authentication
activate auth
auth -> web: Authentication successful
deactivate auth

web -> cal_service: Request group's shared calendars
activate cal_service
cal_service -> web: Return shared calendars
deactivate cal_service

web -> user: Display shared calendars
deactivate web

user -> mobile_app: Access calendar via mobile
activate mobile_app

mobile_app -> auth: Request authentication
activate auth
auth -> mobile_app: Authentication successful
deactivate auth

mobile_app -> cal_service: Request group's shared calendars
activate cal_service
cal_service -> mobile_app: Return shared calendars
deactivate cal_service

mobile_app -> user: Display shared calendars
deactivate mobile_app

@enduml
```

This diagram illustrates the following steps:
1. The user attempts to access the shared calendars through the web interface.
2. The web interface requests authentication from the authentication system.
3. Upon successful authentication, the web interface requests the group's shared calendars from the calendar service.
4. The calendar service returns the shared calendars, which are then displayed to the user through the web interface.
5. Similarly, the user tries to access the shared calendars using the mobile application.
6. The mobile app requests authentication in the same manner.
7. Upon successful authentication, the mobile app requests the group's shared calendars from the calendar service.
8. The calendar service sends the information back to the mobile app, which then displays the shared calendars to the user.

This sequence diagram is a high-level representation. Depending on the actual implementation details, there could be additional components and interactions, especially concerning data handling, error management, and user notifications.