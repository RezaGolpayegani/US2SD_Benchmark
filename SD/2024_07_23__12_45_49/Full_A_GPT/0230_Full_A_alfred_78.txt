Creating a detailed PlantUML sequence diagram for the given user story involves illustrating the interactions between the user (in this case, an Older Person) and the ALFRED system, along with any other potential interactions with systems or services necessary to organize a meeting with a group of friends. 

Please note, the sequence diagram below is a text-based representation which needs to be processed by a PlantUML compiler (e.g., within compatible IDEs or online PlantUML tools) to visualize the flow.

```plantuml
@startuml
participant OlderPerson as user
participant "ALFRED Device" as alfred
participant "Calendar Service" as calendar
participant "Friend Contacts" as contacts
participant "Meeting Notification Service" as notificationService
participant "Location Service" as location

== Organize Meeting ==

user -> alfred : "Organize meeting with friends at [location] on [date & time]"
activate alfred

alfred -> calendar : Check availability on [date & time]
activate calendar
calendar --> alfred : Availability confirmed
deactivate calendar

alfred -> contacts : Retrieve friend contact details
activate contacts
contacts --> alfred : Provide contact details
deactivate contacts

alfred -> location : Validate meeting location
activate location
location --> alfred : Location confirmed
deactivate location

alfred -> notificationService : Send meeting invitations to friends
activate notificationService
notificationService -> contacts : Retrieve friend contact details for notifications
notificationService --> alfred : Invitations sent
deactivate notificationService

alfred -> alfred : Log meeting in system calendar
alfred -> user : "Meeting organized successfully for [date & time] at [location]"
deactivate alfred

@enduml
```

### Explanation:

- **OlderPerson to ALFRED Device**: The interaction starts with the user commanding ALFRED to organize a meeting, specifying the desired location, date, and time.
- **ALFRED Device to Calendar Service**: ALFRED checks the user's calendar for availability on the specified date and time.
- **ALFRED Device to Friend Contacts**: After confirming the user's availability, ALFRED retrieves the contact details of the friends with whom the meeting is to be organized.
- **ALFRED Device to Location Service**: Before sending out invitations, ALFRED validates the specified meeting location to ensure it's appropriate and exists.
- **ALFRED Device to Meeting Notification Service**: With a confirmed location and date, ALFRED uses a notification service to send out meeting invitations to the user's friends. This service could manage emails, SMS, or in-app notifications, depending on the friends' contact preferences.
- **ALFRED Device Logs and Confirmation**: Lastly, ALFRED logs the meeting in the system's calendar for future reference and notifies the user that the meeting has been successfully organized.

This sequence diagram abstracts some complexities involved in such interactions and focuses on the primary flow of organizing a meeting. Implementing real-world features may require considering additional factors like handling conflicts, user authentication, and error management.