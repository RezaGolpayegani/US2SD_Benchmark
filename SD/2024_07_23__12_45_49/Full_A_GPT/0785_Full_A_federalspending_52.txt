Creating a detailed sequence diagram for this specific user story in PlantUML format involves outlining the interactions between the user and various system components involved in ensuring that NASA grants are not displayed as contracts. This sequence will include user actions, system responses, database queries, and conditional logic to accurately reflect the requirement. 

Here's a basic outline of what this might look like in PlantUML syntax. The actual implementation can vary based on the underlying system architecture and the specific technologies in use.

```plantuml
@startuml
participant "User" as user
participant "Web Interface" as web
participant "Server" as server
participant "Validation Logic" as validation
participant "Database" as db

user -> web : Request Data Display
web -> server : Fetch Data Request
server -> validation : Validate Data Type
validation -> db : Query Grants and Contracts
db -> validation : Grants and Contracts Data
validation -> validation : Filter Out NASA Grants from Contracts
validation -> server : Validated and Filtered Data
server -> web : Data for Display
web -> user : Display Data Excluding NASA Grants
@enduml
```

### Explanation:

1. **User initiates a request for data display:** This step represents the user's action of requesting information which might include grants and contracts.

2. **Web Interface forwards the request to the Server:** The Web Interface (UI) acts as the intermediary, capturing the user's request and sending it to the server for processing.

3. **Server requests Validation Logic to verify data type:** Before fetching the data, the server consults the validation logic to ensure the correct data type (e.g., separating grants from contracts) is identified and handled.

4. **Validation Logic queries the Database:** The system needs to fetch both grants and contracts from the database, so the validation logic sends a query to retrieve this data.

5. **Database returns Grants and Contracts data:** The database responds with the requested data, which includes both grants and contracts.

6. **Validation Logic filters out NASA grants:** With the data at hand, the validation logic applies filters to separate NASA grants from the data set meant to be displayed as contracts.

7. **Validated and filtered data sent back to the Server:** Once the data has been appropriately validated and filtered, it is sent back to the server.

8. **Server sends the data for display to the Web Interface:** The server processes the filtered data and sends it to the web interface for display.

9. **Web Interface displays the data, excluding NASA grants:** Finally, the web interface presents the data to the user, ensuring that NASA grants are not displayed as contracts.

This sequence ensures that the system can differentiate between grants and contracts, specifically excluding NASA grants from being incorrectly displayed, in line with the userâ€™s request.
