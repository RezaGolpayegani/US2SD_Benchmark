Creating a detailed sequence diagram for the user story you provided in PlantUML format requires a deep understanding of the interaction between the platform's components when a Publisher wants to highlight their published data. Below is a comprehensive sequence diagram that delineates this process.

```plantuml
@startuml
participant Publisher
participant "UI Interface" as UI
participant "Data Publishing Service" as PublishingService
participant "Validation Service" as ValidationService
participant Database
participant "Data Storage" as Storage
participant "Cache System" as Cache

Publisher -> UI : Access Publishing Platform
activate UI

UI -> PublishingService : Request Data Publishing Form
activate PublishingService

PublishingService -> UI : Provide Data Publishing Form
UI -> Publisher : Display Data Publishing Form

Publisher -> UI : Submit Data Package Details and Files
UI -> PublishingService : Initiate Data Publishing Process

PublishingService -> ValidationService : Validate Data Package
activate ValidationService
ValidationService -> PublishingService : Return Validation Results

alt If Data is Valid
    PublishingService -> Database : Create Data Package Record
    activate Database
    Database -> PublishingService : Confirm Data Package Record Created
    deactivate Database

    PublishingService -> Storage : Store Data Package Files
    activate Storage
    Storage -> PublishingService : Confirm Data Stored
    deactivate Storage

    PublishingService -> Cache : Cache Data Package for Quick Access
    activate Cache
    Cache -> PublishingService : Confirm Data Cached
    deactivate Cache

    PublishingService -> UI : Notify Success & Provide Sharing Options
    UI -> Publisher : Show Success & Sharing Options

    Publisher -> UI : Choose Highlighting Option
    UI -> PublishingSchool : Apply Highlighting Option
    PublishingSchool -> Database : Update Data Package Record with Highlight
    Database -> PublishingSchool : Confirm Update
    PublishingSchool -> UI : Highlight Applied
    UI -> Publisher : Show Updated Publication with Highlight
else If Data is Invalid
    PublishingService -> UI : Notify Data Validation Failed
    UI -> Publisher : Display Validation Errors
    
    Publisher -> UI : Adjust Data Package and Resubmit
    [-> PublishingService : Repeat Process
endif

deactivate PublishingService
deactivate UI
@enduml
```

This sequence diagram starts with the Publisher accessing the user interface (UI) of the data publishing platform. Following this, the interaction flows through requesting and submitting a data publishing form, initiating the data publishing process, which includes data validation. Depending on the validation result, the sequence continues with storing the data package, caching it for quick access, and finally updating the database to highlight the published data, assuming all necessary highlighting options are chosen by the Publisher. 

Errors or validation failures loop back to the data correction and resubmission step, ensuring that only valid data packages get published and highlighted. This diagram can be fine-tuned further based on the specific technologies or additional steps involved in the Publishing Platform's backend processes.

Please, adjust or add components and interactions according to your exact technical specifications and the system's design.