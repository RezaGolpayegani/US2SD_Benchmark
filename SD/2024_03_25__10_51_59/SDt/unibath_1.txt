@startuml
title Depositor deposits and maintains datasets

actor Depositor
participant "Web Interface" as A
database "Database" as B

Depositor -> A: RequestAccess()
activate A

A --> B: ValidateAccess()
activate B

B --> A: ReturnAccessValidation()
deactivate B

A --> Depositor: AccessGranted()
deactivate A

Depositor -> A: DepositsDataset()
activate A

A --> B: SaveDataset()
activate B

B --> A: DataSetStoredConfirmation()
deactivate B

A --> Depositor: DataSetStoredNotification()
deactivate A

Depositor -> A: UpdateDataset()
activate A

A --> B: ModifyDataset()
activate B

B --> A: DatasetUpdatedConfirmation()
deactivate B

A --> Depositor: DatasetUpdatedNotification()
deactivate A

Depositor -> A: Exit()
activate A

A --> Depositor: LogoutConfirmation()
deactivate A

@enduml