Sure, here is a simplified sequence diagram represented in PlantUML code for your user story:

```plantuml
@startuml

participant "Trainer" as T
database "Database" as DB
participant "Website" as W
participant "Prospective Attendee" as PA

T -> DB: Submit upcoming classes details
DB --> DB: Store class details
DB --> T: Confirm class details stored
T -> W: Add class details to profile
W --> W: Update class display w/ link to details
PA -> W: View trainer profile
W -> PA: Display upcoming classes w/ links

@enduml
```

In the example above:

- The Trainer submits their upcoming classes details to the Database.
- The Database stores the class details and confirms it to the Trainer.
- The Trainer then adds this information to their profile on the Website.
- The Website updates the display accordingly, by adding links to the detailed information of each class.
- The Prospective Attendee then views the Trainer's profile on the website.
- The Website shows the upcoming classes along with their links to the Prospective Attendee.

This is a simplified sequence diagram and the interactions may involve a bit more complexity in a real case scenario. For example, validation operations, systems exceptions, among others, could also be considered depending on the exact requirements.