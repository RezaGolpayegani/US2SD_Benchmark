Below is a basic sequence diagram showing the steps a moderator would take to export a transcript of a game as a HTML file:

```plantuml
@startuml
participant "Moderator" as M
participant "Game Interface" as GI
participant "Transcript Export System" as TES
participant "Database" as DB

M -> GI : Open Game Options
GI -> M: Display Options Menu
M -> GI : Selects 'Export Transcript'
GI -> TES: Request Export
activate TES
TES -> DB : Fetch Game Transcript
activate DB
DB --> TES: Return Transcript Data
deactivate DB
TES --> GI: Generate HTML File
GI --> M: Provide Download
deactivate TES
M -> GI : Download HTML File
@enduml
```

Please note, to export the data as a HTML file, a back-end process would generate the HTML data. This usually involves querying a database for the relevant transcript data, structuring it into HTML format and then returning it to the user, probably through a front-end interface. As such, this sequence diagram includes a participant that represents this process. 

However without more specific knowledge of the application's structure it is difficult to be precise, so this is only a basic representation. For example, depending on how the import-export functionality is implemented, the 'Game Interface' component might be handling part of those duties, and the 'Account Management' system would also likely be involved in some way. Similarly, decisions about user experience, such as whether the export/import process interrupts the user's ongoing tasks, would also affect the sequence of operations.

It is recommended to adjust the representation to fit the internal architecture of your project.