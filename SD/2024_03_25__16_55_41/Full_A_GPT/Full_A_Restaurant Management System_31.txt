As an AI model, I cannot directly generate diagrams. However, I can give you a step by step guide on how to create a sequence diagram in Plant UML format based on your user story. Take a look at how you can translate this into code:

```
@startuml
participant "Chef" as A
participant "Restaurant Management System" as RMS
participant "KitchenDisplay" as KD

A -> RMS: Request to update order status
activate RMS
RMS -> RMS: Check order status
RMS --> A: Confirm order status
A -> RMS: Update order status to 'can be served'
note right of RMS: Update the order's status \n within the system.
RMS -> KD: Update display to 'can be served'
note right of KD: Order status is displayed \n as 'can be served' on the kitchen display.
deactivate RMS
@enduml
```

In this scenario, the Chef is the actor who interacts with the Restaurant Management System (RMS). He requests to update the status of an order, which the system checks and then confirms back. After receiving confirmation, the Chef updates the status to 'can be served'. The RMS then updates this new status on the Kitchen Display so that the waiting staff know that the meal is ready to be served. 

Remember that you need to install PlantUML (and Graphviz/DOT language, which PlantUML uses) to render the UML diagrams and 'Graphviz' is used for layout algorithms. You may write PlantUML code in any text editor and then use an online renderer (like the official PlantUML server) or a local tool (like the 'PlantUML Viewer' extension for Visual Studio Code) to visualize the UML diagram.