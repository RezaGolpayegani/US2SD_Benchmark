@startuml
actor RepositoryManager as rm
interface CollectionManager as cm
entity Collection as c
entity ObjectComponent as oc
entity Object as o

rm -> cm : describeFacet(collectionFacet:CollectionFacet)
activate cm
cm -> c : setFacet(collectionFacet:CollectionFacet)
activate c
c --> cm : isUpdated: Boolean
deactivate c
cm --> rm : isUpdated:Boolean
deactivate cm

rm -> cm : describeFacet(objectFacet:ObjectFacet)
activate cm
cm -> o : setFacet(objectFacet:ObjectFacet)
activate o
o --> cm : isUpdated: Boolean
deactivate o
cm --> rm : isUpdated:Boolean
deactivate cm

rm -> cm : describeFacet(objectComponentFacet:ObjectComponentFacet)
activate cm
cm -> oc : setFacet(objectComponentFacet:ObjectComponentFacet)
activate oc
oc --> cm : isUpdated: Boolean
deactivate oc
cm --> rm : isUpdated:Boolean
deactivate cm
@enduml