Creating a detailed sequence diagram for the mentioned user story involves representing the interactions between actors and the system components for the scenario where an owner invites someone to become a member of their Publisher. Below is a PlantUML code snippet that outlines this process.

**Note**: This diagram assumes a simplified version of the interaction for the purpose of clarity. Depending on the actual system architecture, additional steps or services (like email verification services, database services, etc.) might be involved.

```plantuml
@startuml
actor Owner
participant "User Interface" as UI
participant "Pub/Member Management Service" as PMS
participant "Email Service" as ES
database "Platform Database" as DB

Owner -> UI : Select 'Invite Member'
Owner -> UI : Enter email of invitee
UI -> PMS : Request to invite new member
activate PMS

PMS -> DB : Check if email already exists
activate DB
DB --> PMS : Email not registered
deactivate DB

PMS -> ES : Send invitation email
activate ES
ES --> PMS : Email sent
deactivate ES

PMS --> UI : Invitation sent confirmation
UI --> Owner : Display confirmation

@enduml
```

Here's a quick walkthrough of the sequence:

1. **Owner Interaction**: The owner starts the process by selecting the 'Invite Member' option on the user interface and entering the email of the person they want to invite.
2. **Request Handling**: The 'User Interface' passes the invitation request to the 'Publisher/Member Management Service' (PMS).
3. **Email Verification**: The PMS checks with the 'Platform Database' to verify if the email is already associated with an existing account.
4. **Email Invitation**: If the email is not already registered, the PMS then requests the 'Email Service' to send an invitation to the potential new member.
5. **Confirmation**: Once the email is successfully sent, the PMS confirms the action back to the 'User Interface', which in turn informs the owner that the invitation has been sent.

This sequence diagram is a high-level representation and can be further detailed or adjusted based on the specific implementation details of the Data Registry and Publishing Platform project.