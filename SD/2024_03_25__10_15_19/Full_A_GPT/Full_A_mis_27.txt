Unfortunately, as a text-based AI model developed by OpenAI, I can't create UML diagrams directly. However, I can provide you the step by step instructions on how to create a sequence diagram for this user story in the Plant UML:

Please install the PlantUML if you haven't installed it.

Sequence Diagram:

1. Actor (DigitalRecords Archivist)
2. Boundaries (UI Interface to Add/Remove depositors & Deposit groups)
3. Controllers (Add/Remove People Controller, Set Date Controller, Set Permission Controller)
4. Entities (Depositors, Deposit Groups, Collections, Default Permission)

Based on them, you can create a sequence diagram:

```plantuml
@startuml
actor DigitalRecords_Archivist as A
boundary UI as B
control Add_Remove_People_Controller as ARPC
control Set_Date_Controller as SDC
control Set_Permission_Controller as SPC
entity Depositors as D
entity Deposit_Groups as DG
entity Collections as C
entity Default_Permission as DP


A -> B : Request to add/remove people to/from groups
activate B
B -> ARPC : Initiate add/remove process
activate ARPC
ARPC --> D : Add/Remove from list
deactivate ARPC
activate D
D --> B : Return updated list
deactivate D
deactivate B

A -> B : Set closing date
activate B
B -> SDC : Initiate date setting
activate SDC
SDC --> C : Update date
deactivate SDC
activate C
C --> B : Return updated collection
deactivate C
deactivate B

A -> B : Set permissions
activate B
B -> SPC : Initiate permission setting
activate SPC
SPC --> DP : Set default permissions
deactivate SPC
activate DP
DP --> B : Return updated permission
deactivate DP
deactivate B
@enduml
```

This PlantUML code can be used to generate the sequence diagram with your local development environment. The diagram now shows that DigitalRecords Archivist interacts with UI to add/remove depositor to/from groups, set closing date and set permissions. These actions are then processed by respective controllers (Add_Remove_People_Controller, Set_Date_Controller, Set_Permission_Controller) and entities (Depositors, Deposit groups, Collections and Default Permission) are updated.

Please note that, this is a simple demonstration and actual diagram might include more classes/entities, use cases and it would be more complex based on actual use case.