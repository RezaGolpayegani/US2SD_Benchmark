Due to the limitations of the text-based medium, I will provide a written narrative for the sequence diagram, along with a rough structure for how the Plant UML script may look like. You may have to adjust it accordingly to exactly fit your needs.

As this is a simple user story, the sequence diagram will be straightforward:

1. Initially, the RepositoryManager actor (User) will send a getDataDetails() message to the RepositorySystem.
2. The RepositorySystem will calculate the data details by calling calculationDetails() operation. 
3. Once it finishes calculating data details, it then returns the dataDetails to the RepositoryManager in the form of the reply message, returnDataDetails().

Now, let's begin to formulate this in a Plant UML script:

```plantuml
@startuml
actor RepositoryManager
participant RepositorySystem

RepositoryManager -> RepositorySystem: getDataDetails()
activate RepositorySystem
RepositorySystem -> RepositorySystem: calculateDetails()
RepositorySystem --> RepositoryManager: returnDataDetails()
deactivate RepositorySystem
@enduml
```

It is worth noting, however, that the PlantUML code might vary depending on the implementation details such as the method names, classes used, and any additional interactions that might not be immediately clear from the user story.