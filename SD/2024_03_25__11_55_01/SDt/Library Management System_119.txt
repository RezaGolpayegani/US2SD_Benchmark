@startuml
actor "Library Manager" as manager
participant "Library System" as system

manager --> system: login()
activate system
system --> manager: showDashboard()
activate manager
manager --> system: accessBookRegistry()
activate system
system --> manager: displayBooks()
deactivate system
manager --> system: addBook(inputBookDetails())
activate system
system --> manager: saveBookDetails()
deactivate system

manager --> system: accessBorrowerRegistry()
activate system
system --> manager: displayBorrowers()
deactivate system
manager --> system: checkOutBook(inputBorrowerDetails(), inputBookDetails())
activate system
system --> manager: saveBorrowerDetails()
deactivate system
system --> manager: confirmAvailability(inputBookDetails())
activate system
system --> manager: markAsBorrowed(inputBookDetails(), updateBorrowerRecord())

@enduml