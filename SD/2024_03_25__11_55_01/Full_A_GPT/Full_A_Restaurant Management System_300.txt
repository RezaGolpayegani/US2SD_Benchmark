Here's a simplified version of how the sequence diagram could look like in PlantUML syntax:

```plantuml
@startuml
participant Waiter
database Inventory
participant Order_Items

Waiter -> Inventory : Check availability(order_items)
activate Inventory

Inventory-> Order_Items : retrieve_availability(order_items)
activate Order_Items

Order_Items --> Inventory : returns items stock status
deactivate Order_Items

Inventory --> Waiter : returns order_items_availability
deactivate Inventory

@enduml
```

In the sequence diagram above, it is assumed that the "Waiter" first sends a signal to the "Inventory" to check the availability of "order_items". The "Inventory" then sends a signal to the entity "Order_Items" to retrieve the stock status. "Order_Items" will return the status back to the "Inventory" and then "Inventory" will finally return the availability of the "order_items" back to the "Waiter". 

Please adjust the script according to your system's design.

Note: Sequence diagram primarily depicts interaction between objects, so actual entities may vary based on your system design. Your inventory might be managed by an inventory service, availability could be checked by a separate module etc. Remember to take these into account while creating the sequence diagram.