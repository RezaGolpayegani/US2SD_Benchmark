Here's a detailed sequence diagram for the user story in PlantUML:

```
@startuml
title Creating and Attaching a File to a Logbook

actor Researcher
boundary "Logbook Page" as LP
control "Logbook Controller" as LC
entity "Database" as DC
actor User

Researcher -> LP : Wants to create a logbook page
activate LP
LP -> LC : Call operation Create()
activate LC
LC -> DC : Send query create
activate DC
DC -->> LC : Return pageId
deactivate DC
LC -->> LP : Return pageId
deactivate LC
LP -->> Researcher : Page created
deactivate LP

Researcher -> LP : Wants to attach a file
activate LP
LP -> LC : Call operation AttachFile(pageId)
activate LC
LC -> DC : Send query attachFile
activate DC
DC -->> LC : Return fileId
deactivate DC
LC -->> LP : Return fileId
deactivate LC
LP -->> Researcher : File attached
deactivate LP
@enduml
```

The diagram illustrates a scenario where the researcher interacts with the "Logbook Page" interface to carry out their work. It encompasses their two primary desires, which are to create a fresh logbook page and to attach a file to that page.

Keep in mind that this only represents one method for organizing these software components. The actual program may call into use other components and processes not displayed here.